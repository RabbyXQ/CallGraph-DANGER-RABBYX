digraph CallGraph {
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void main(java.lang.String[])>" -> "<java.io.File: void <clinit>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void main(java.lang.String[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void main(java.lang.String[])>" -> "<com.fp.games.droid.mhunt.level.TheSaharaLevel: void <init>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void main(java.lang.String[])>" -> "<java.lang.Throwable: void printStackTrace()>";
"<java.lang.Throwable: void printStackTrace()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void main(java.lang.String[])>" -> "<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <clinit>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.FileInputStream: void <init>(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.FileOutputStream: void <init>(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelDesigner: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void <init>()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.Monster: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.FileInputStream: void <init>(java.io.File)>" -> "<java.io.FileInputStream: void finalize()>";
"<java.io.FileInputStream: void <init>(java.io.File)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void <init>(java.io.File)>" -> "<java.io.InputStream: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.io.FileOutputStream: void finalize()>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.io.OutputStream: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.fp.games.droid.mhunt.level.Layer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.FileInputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.io.FileOutputStream: void close()>";
"<java.io.FileOutputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelDesigner: void setName(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelDesigner: void setEmail(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelDesigner: void setWebsite(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setX(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setY(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setImageFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setX(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setY(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setImageFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setX(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setY(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void setImageFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setX(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setY(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setWidth(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setHeight(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setOffset(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setScrollFactor(float)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setImageFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setX(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setY(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setWidth(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setHeight(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setOffset(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setScrollFactor(float)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void setImageFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setMajor(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setMinor(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setPatch(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setName(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setTextureWidth(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setTextureHeight(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setCommonMonsterCount(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setKillCount(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setNewMonsterKillCount(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setLevelMonsterKillCount(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setAmmoPercentage(float)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setAmmoBonusCount(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setLifeBonusCount(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setAttackCount(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setMonsterVelocityBase(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setMonsterVelocityDifficultyBase(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setZombieMonsterVelocityAddition(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setMonsterAccelerationBase(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setMonsterAccelerationDifficultyBase(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setZombieMonsterAccelerationAddition(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setScrollDirection(byte)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: java.util.List getLayers()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: java.util.List getLayers()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setIconX(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setIconY(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setIconWidth(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setIconHeight(int)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void setIconFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: java.util.List getLevelMonsters()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: java.util.List getLevelDesigners()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: java.util.List getNewMonsters()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: java.util.List getLevelMonsters()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.lang.System: void <clinit>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(java.io.ByteArrayOutputStream)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.File)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void <init>(java.io.OutputStream)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.ByteArrayOutputStream: void <init>(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.lang.String: void <clinit>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelDesigner: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void <init>()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: void <init>(java.io.InputStream)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.ByteArrayInputStream: void <init>(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(java.io.ByteArrayOutputStream)>" -> "<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.File)>" -> "<java.io.FileInputStream: void <init>(java.io.File)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.File)>" -> "<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>";
"<java.io.DataOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<java.io.DataOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void <init>(int)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.ByteArrayOutputStream: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>" -> "<java.io.ByteArrayOutputStream: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayInputStream: void <init>(byte[])>" -> "<java.io.InputStream: void <init>()>";
"<java.io.ByteArrayInputStream: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>" -> "<java.util.zip.Inflater: void <init>()>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>" -> "<java.io.ByteArrayOutputStream: void <init>(int)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.util.zip.Deflater: void <init>()>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.io.ByteArrayOutputStream: void <init>(int)>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void <init>()>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.ByteArrayOutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Inflater: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.zip.Inflater: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Deflater: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.zip.Deflater: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<java.io.ByteArrayOutputStream: byte[] toByteArray()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
"<java.io.ByteArrayOutputStream: void write(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.util.zip.Deflater: void setLevel(int)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.util.zip.Deflater: void setInput(byte[])>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.util.zip.Deflater: void finish()>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.util.zip.Deflater: boolean finished()>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(byte[])>" -> "<java.util.zip.Deflater: int deflate(byte[])>";
"<java.util.zip.Deflater: void setLevel(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Deflater: void setInput(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Deflater: void finish()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Deflater: boolean finished()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Deflater: int deflate(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>" -> "<java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>" -> "<java.util.zip.Inflater: void setInput(byte[])>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>" -> "<java.util.zip.Inflater: boolean finished()>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream uncompress(byte[])>" -> "<java.util.zip.Inflater: int inflate(byte[])>";
"<java.util.zip.Inflater: void setInput(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Inflater: boolean finished()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.Inflater: int inflate(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>" -> "<java.io.OutputStream: void flush()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>" -> "<java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
"<java.io.OutputStream: void flush()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>" -> "<java.io.FileInputStream: int read(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: byte[] readFile(java.io.InputStream)>" -> "<java.io.FileInputStream: void close()>";
"<java.io.FileInputStream: int read(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.Compressor: java.io.ByteArrayOutputStream compress(java.io.ByteArrayOutputStream)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.TheSaharaLevel: void build(java.io.File,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: void <clinit>()>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: java.lang.String trim()>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: java.lang.String trim()>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.lang.String: java.lang.String trim()>";
"<java.lang.String: java.lang.String trim()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelDesigner: void encode(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<java.io.DataInputStream: int read(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void decode(java.io.DataInputStream,boolean)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Monster: void decode(java.io.DataInputStream,boolean)>";
"<com.fp.games.droid.mhunt.level.Monster: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Monster: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Monster: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Monster: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<java.io.DataInputStream: int readInt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: float readFloat()>";
"<com.fp.games.droid.mhunt.level.Layer: void decode(java.io.DataInputStream,boolean)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<java.io.DataInputStream: float readFloat()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.lang.String: java.lang.String trim()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: long readLong()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: float readFloat()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: byte readByte()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int read(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.io.FilterInputStream: void close()>";
"<java.io.DataInputStream: byte readByte()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: long readLong()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void decode(java.io.InputStream,boolean,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeLong(long)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.FilterOutputStream: void write(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeFloat(float)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeByte(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.FilterOutputStream: void write(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.DataOutputStream: void flush()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.FilterOutputStream: void close()>";
"<java.io.DataOutputStream: void writeByte(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void writeLong(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterOutputStream: void write(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void writeInt(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void writeFloat(float)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void flush()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterOutputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.FileOutputStream: void write(byte[])>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.io.OutputStream: void flush()>";
"<java.io.FileOutputStream: void write(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: int size()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: int size()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: int size()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: int size()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<java.util.ArrayList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: java.util.Iterator iterator()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.lang.String: byte[] getBytes()>";
"<com.fp.games.droid.mhunt.level.LevelInfo: void encode(java.io.OutputStream,boolean)>" -> "<java.lang.String: int length()>";
"<java.lang.String: byte[] getBytes()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
