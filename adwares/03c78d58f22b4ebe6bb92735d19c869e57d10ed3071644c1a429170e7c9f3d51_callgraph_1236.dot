digraph CallGraph {
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.io.FileInputStream: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.System: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<com.batterypoweredgames.xyzutils.ObjImporter$Face: void <init>(com.batterypoweredgames.xyzutils.ObjImporter$Face)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<com.batterypoweredgames.xyzutils.Vector3F: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<com.batterypoweredgames.xyzutils.ObjImporter$UVCoord: void <init>(com.batterypoweredgames.xyzutils.ObjImporter$UVCoord)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<com.batterypoweredgames.xyzutils.Point3F: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.HashMap: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.Float: void <clinit>()>";
"<java.io.FileInputStream: void <init>(java.lang.String)>" -> "<java.io.FileInputStream: void finalize()>";
"<java.io.FileInputStream: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void <init>(java.lang.String)>" -> "<java.io.InputStream: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter$Face: void <init>(com.batterypoweredgames.xyzutils.ObjImporter$Face)>" -> "<com.batterypoweredgames.xyzutils.ObjImporter$Face: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.lang.System: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.lang.String: java.lang.String valueOf(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.ModelData3D: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<com.batterypoweredgames.xyzutils.FPMath: void <clinit>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.lang.String: void <clinit>()>";
"<java.lang.Float: java.lang.Float valueOf(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.Vector3F: void <init>()>" -> "<com.batterypoweredgames.xyzutils.Point3F: void <init>()>";
"<com.batterypoweredgames.xyzutils.ObjImporter$UVCoord: void <init>(com.batterypoweredgames.xyzutils.ObjImporter$UVCoord)>" -> "<com.batterypoweredgames.xyzutils.ObjImporter$UVCoord: void <init>()>";
"<com.batterypoweredgames.xyzutils.Point3F: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.BufferedReader: void <init>(java.io.Reader)>" -> "<java.io.Reader: void <init>()>";
"<java.io.BufferedReader: void <init>(java.io.Reader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream)>" -> "<java.io.Reader: void <init>()>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: void <init>()>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter$Face: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: java.lang.String valueOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ModelData3D: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.batterypoweredgames.xyzutils.FPMath: void <clinit>()>" -> "<com.batterypoweredgames.xyzutils.FPMath: int toFP(float)>";
"<com.batterypoweredgames.xyzutils.ObjImporter$UVCoord: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Reader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Reader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: int length()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: int length()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: int length()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: int length()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: int length()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: int length()>";
"<java.lang.String: java.lang.String[] split(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.lang.String: java.lang.String trim()>";
"<java.lang.String: java.lang.String trim()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.io.BufferedReader: void close()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<java.io.BufferedReader: java.lang.String readLine()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedReader: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: void clear()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: void clear()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.util.ArrayList: int size()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: com.batterypoweredgames.xyzutils.ModelData3D processGroup(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<java.util.ArrayList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: java.util.HashMap importObj(java.io.InputStream,boolean)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.util.HashMap: java.util.Set keySet()>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<java.util.HashMap: java.util.Set keySet()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: java.lang.Object get(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.Throwable: void printStackTrace()>";
"<java.lang.Throwable: void printStackTrace()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.batterypoweredgames.xyzutils.ObjImporter: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
