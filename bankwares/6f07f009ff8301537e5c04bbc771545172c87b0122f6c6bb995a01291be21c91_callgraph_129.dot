digraph CallGraph {
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<java.lang.Integer: java.lang.Integer decode(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<sunlabs.brazil.util.ClockFormat: void main(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.util.Locale: void <clinit>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<sunlabs.brazil.util.ClockFormat: int GetWeek(java.util.Calendar,int,boolean)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<sunlabs.brazil.util.ClockFormat: int GetWeek(java.util.Calendar,int,boolean)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<sunlabs.brazil.util.ClockFormat: int GetWeek(java.util.Calendar,int,boolean)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: void <init>()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.FieldPosition: void <init>(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.util.Calendar: java.util.Calendar getInstance()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.util.Date: void <init>(long)>";
"<java.lang.Integer: java.lang.Integer decode(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>" -> "<java.text.DateFormat: void <init>()>";
"<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.FieldPosition: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.text.FieldPosition: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Calendar: java.util.Calendar getInstance()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Date: void <init>(long)>" -> "<java.lang.Object: void <init>()>";
"<java.util.Date: void <init>(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.DateFormat: void <init>()>" -> "<java.text.Format: void <init>()>";
"<java.text.DateFormat: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.Format: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.text.Format: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: void setCalendar(java.util.Calendar)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: void setCalendar(java.util.Calendar)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: void setCalendar(java.util.Calendar)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: void setCalendar(java.util.Calendar)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<java.text.DateFormat: void setCalendar(java.util.Calendar)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: java.lang.String format(java.util.Date)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: java.lang.String format(java.util.Date)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.DateFormat: java.lang.String format(java.util.Date)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>";
"<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.DateFormat: java.lang.String format(java.util.Date)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.util.Date: long getTime()>";
"<java.util.Date: long getTime()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<sunlabs.brazil.util.ClockFormat: java.lang.String format(int,java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
}
