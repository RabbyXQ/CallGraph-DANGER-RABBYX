digraph CallGraph {
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void closeServerSocket()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void closeServerSocket()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: boolean startSystemServer()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void gc()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.SamplingProfilerIntegration: void writeZygoteSnapshot()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<android.util.EventLog: int writeEvent(int,long)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<android.util.EventLog: int writeEvent(int,long)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.SamplingProfilerIntegration: void start()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.Integer: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<android.util.Log: int w(java.lang.String,java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<com.android.internal.os.SamplingProfilerIntegration$1: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<android.os.SystemProperties: int getInt(java.lang.String,int)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<android.os.SystemProperties: int getInt(java.lang.String,int)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.io.File: void <clinit>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void closeServerSocket()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void closeServerSocket()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void closeServerSocket()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.io.FileDescriptor: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteInit: void preloadClasses()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteInit: void preloadResources()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteInit: int selectReadable(java.io.FileDescriptor[])>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteInit: void gc()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: void <init>()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: void <init>()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<android.util.Log: int i(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<java.lang.String: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<java.lang.RuntimeException: void <init>(java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<dalvik.system.Zygote: int forkSystemServer(int,int,int[],int,int[][],long,long)>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<com.android.internal.os.ZygoteConnection: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<com.android.internal.os.ZygoteConnection$Arguments: void <init>(java.lang.String[])>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: boolean startSystemServer()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void gc()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void gc()>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: void gc()>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: void gc()>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: void gc()>" -> "<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeZygoteSnapshot()>" -> "<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeZygoteSnapshot()>" -> "<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<com.android.internal.os.ZygoteInit: java.io.FileDescriptor createFileDescriptor(int)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.System: java.lang.String getenv(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<dalvik.system.profiler.SamplingProfiler: void <init>(int,dalvik.system.profiler.SamplingProfiler$ThreadSet)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.SamplingProfiler$ThreadSet newThreadGroupTheadSet(java.lang.ThreadGroup)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.Thread: java.lang.Thread currentThread()>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.util.Date: void <init>(long)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.System: void <clinit>()>";
"<android.os.SystemProperties: void <clinit>()>" -> "<java.util.ArrayList: void <init>()>";
"<java.lang.Integer: int parseInt(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>" -> "<android.os.SystemProperties: void <clinit>()>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>" -> "<android.os.SystemProperties: java.lang.String native_get(java.lang.String,java.lang.String)>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.util.Log: int w(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration$1: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.SystemProperties: int getInt(java.lang.String,int)>" -> "<android.os.SystemProperties: void <clinit>()>";
"<android.os.SystemProperties: int getInt(java.lang.String,int)>" -> "<android.os.SystemProperties: int native_get_int(java.lang.String,int)>";
"<android.os.SystemProperties: int getInt(java.lang.String,int)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>" -> "<java.lang.Object: void <init>()>";
"<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.util.Log: int e(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.RuntimeException: void <init>(java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: void stopAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: void stopAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int w(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: void stopAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: void resetGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int v(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: int getGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: int getGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.Class: java.lang.Class forName(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.io.BufferedReader: void <init>(java.io.Reader,int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.Debug: void startAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.Debug: void stopAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.Debug: void stopAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.Debug: void stopAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.SystemClock: long uptimeMillis()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.content.res.Resources: android.content.res.Resources getSystem()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<android.os.Debug: void startAllocCounting()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String)>" -> "<android.os.SystemProperties: void <clinit>()>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String)>" -> "<android.os.SystemProperties: java.lang.String native_get(java.lang.String)>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer()>" -> "<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket)>";
"<com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.Process: void setArgV0(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.FileUtils: int setUMask(int)>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<com.android.internal.os.ZygoteInit: void closeServerSocket()>";
"<com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<com.android.internal.os.RuntimeInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteConnection: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void <init>(java.lang.String[])>" -> "<java.lang.Object: void <init>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void <init>(java.lang.String[])>" -> "<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>";
"<com.android.internal.os.ZygoteConnection: void <clinit>()>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void <clinit>()>" -> "<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>";
"<java.lang.System: void gc()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<dalvik.system.profiler.BinaryHprofWriter: void write(dalvik.system.profiler.HprofData,java.io.OutputStream)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.IOException: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.PrintStream: void <init>(java.io.OutputStream)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.FileOutputStream: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.File: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.System: void <clinit>()>";
"<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>" -> "<java.lang.Object: void <init>()>";
"<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.System: java.lang.String getenv(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Date: void <init>(long)>" -> "<java.lang.Object: void <init>()>";
"<java.util.Date: void <init>(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<com.android.internal.os.ZygoteInit: int setregid(int,int)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<com.android.internal.os.ZygoteInit: int setreuid(int,int)>";
"<android.os.Debug: void stopAllocCounting()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.Debug: void resetGlobalAllocSize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.util.Log: int v(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.Debug: int getGlobalAllocSize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.Class forName(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedReader: void <init>(java.io.Reader,int)>" -> "<java.io.Reader: void <init>()>";
"<java.io.BufferedReader: void <init>(java.io.Reader,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream)>" -> "<java.io.Reader: void <init>()>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.Debug: void startAllocCounting()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.os.Debug: void resetGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.os.Debug: int getGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.util.Log: int w(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.Integer: java.lang.String toHexString(int)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.os.Debug: void resetGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.System: void gc()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.util.Log: int v(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.os.Debug: int getGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<android.os.Debug: int getGlobalAllocSize()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.System: void <clinit>()>";
"<android.content.res.Resources: android.content.res.Resources getSystem()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket)>" -> "<java.lang.Object: void <init>()>";
"<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader,int)>";
"<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream)>";
"<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket)>" -> "<java.io.DataOutputStream: void <init>(java.io.OutputStream)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>";
"<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void zygoteInitNative()>";
"<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void commonInit()>";
"<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void redirectLogStreams()>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<dalvik.system.Zygote: void execShell(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<dalvik.system.Zygote: void appendQuotedShellArgs(java.lang.StringBuilder,java.lang.String[])>";
"<android.os.Process: void setArgV0(java.lang.String)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<android.os.FileUtils: int setUMask(int)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void <clinit>()>" -> "<android.ddm.DdmRegister: void registerHandlers()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.util.ArrayList: void <init>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Long: java.lang.Long decode(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Long: java.lang.Long decode(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Long: java.lang.Long decode(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Long: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Long: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.IOException: void <init>()>" -> "<java.lang.Exception: void <init>()>";
"<java.io.IOException: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<android.os.Build: void <clinit>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: void <init>()>";
"<java.io.PrintStream: void <init>(java.io.OutputStream)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<java.io.PrintStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.lang.String)>" -> "<java.io.FileOutputStream: void finalize()>";
"<java.io.FileOutputStream: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.lang.String)>" -> "<java.io.OutputStream: void <init>()>";
"<java.lang.RuntimeException: void <init>()>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Reader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Reader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: java.lang.String toHexString(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<java.io.DataOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<android.util.Slog: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit$Arguments: void <init>(java.lang.String[])>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.internal.os.RuntimeInit: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<android.os.Debug: void enableEmulatorTraceOutput()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<android.util.Slog: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.server.NetworkManagementSocketTagger: void install()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.internal.logging.AndroidConfig: void <init>()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.util.TimeZone: void setDefault(java.util.TimeZone)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<org.apache.harmony.luni.internal.util.TimezoneGetter: void setInstance(org.apache.harmony.luni.internal.util.TimezoneGetter)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.internal.os.RuntimeInit$1: void <init>()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.internal.os.RuntimeInit: int getQwertyKeyboard()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>(com.android.internal.os.RuntimeInit$1)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<com.android.server.NetworkManagementSocketTagger: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void redirectLogStreams()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: void redirectLogStreams()>" -> "<java.lang.System: void setErr(java.io.PrintStream)>";
"<com.android.internal.os.RuntimeInit: void redirectLogStreams()>" -> "<com.android.internal.os.AndroidPrintStream: void <init>(int,java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void redirectLogStreams()>" -> "<java.lang.System: void setOut(java.io.PrintStream)>";
"<com.android.internal.os.RuntimeInit: void redirectLogStreams()>" -> "<com.android.internal.os.AndroidPrintStream: void <init>(int,java.lang.String)>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Error: void <init>(java.lang.String)>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Error: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Long: java.lang.Long decode(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.Class: java.lang.Class forName(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void <init>(java.lang.reflect.Method,java.lang.String[])>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.reflect.Modifier: boolean isPublic(int)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.reflect.Modifier: boolean isStatic(int)>";
"<com.android.internal.os.RuntimeInit$Arguments: void <init>(java.lang.String[])>" -> "<java.lang.Object: void <init>()>";
"<com.android.internal.os.RuntimeInit$Arguments: void <init>(java.lang.String[])>" -> "<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>";
"<android.os.Debug: void enableEmulatorTraceOutput()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.server.NetworkManagementSocketTagger: void install()>" -> "<com.android.server.NetworkManagementSocketTagger: void <clinit>()>";
"<com.android.server.NetworkManagementSocketTagger: void install()>" -> "<dalvik.system.SocketTagger: void set(dalvik.system.SocketTagger)>";
"<com.android.server.NetworkManagementSocketTagger: void install()>" -> "<com.android.server.NetworkManagementSocketTagger: void <init>()>";
"<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.System: java.lang.String getProperty(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: void <init>(int)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<android.os.Build: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<android.os.Build: void <clinit>()>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<android.os.Build$VERSION: void <clinit>()>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<java.util.logging.Logger: void <clinit>()>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<com.android.internal.logging.AndroidHandler: void <init>()>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<java.util.logging.Level: void <clinit>()>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<com.android.internal.logging.AndroidHandler: void <clinit>()>";
"<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.TimeZone: void setDefault(java.util.TimeZone)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit$1: void <init>()>" -> "<org.apache.harmony.luni.internal.util.TimezoneGetter: void <init>()>";
"<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>(com.android.internal.os.RuntimeInit$1)>" -> "<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>()>";
"<com.android.server.NetworkManagementSocketTagger: void <clinit>()>" -> "<com.android.server.NetworkManagementSocketTagger$1: void <init>()>";
"<java.lang.System: void setErr(java.io.PrintStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.AndroidPrintStream: void <init>(int,java.lang.String)>" -> "<com.android.internal.os.LoggingPrintStream: void <init>()>";
"<com.android.internal.os.AndroidPrintStream: void <init>(int,java.lang.String)>" -> "<java.lang.NullPointerException: void <init>(java.lang.String)>";
"<java.lang.System: void setOut(java.io.PrintStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void <init>(java.lang.reflect.Method,java.lang.String[])>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.reflect.Modifier: boolean isPublic(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.reflect.Modifier: boolean isStatic(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: void <clinit>()>";
"<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.android.server.NetworkManagementSocketTagger: void <init>()>" -> "<dalvik.system.SocketTagger: void <init>()>";
"<java.lang.System: java.lang.String getProperty(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.logging.AndroidHandler: void <init>()>" -> "<com.android.internal.logging.AndroidHandler: void <clinit>()>";
"<com.android.internal.logging.AndroidHandler: void <init>()>" -> "<java.util.logging.Handler: void <init>()>";
"<com.android.internal.logging.AndroidHandler: void <clinit>()>" -> "<com.android.internal.logging.AndroidHandler$1: void <init>()>";
"<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.android.server.NetworkManagementSocketTagger$1: void <init>()>" -> "<java.lang.ThreadLocal: void <init>()>";
"<com.android.internal.os.LoggingPrintStream: void <init>()>" -> "<com.android.internal.os.LoggingPrintStream$1: void <init>()>";
"<com.android.internal.os.LoggingPrintStream: void <init>()>" -> "<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>";
"<com.android.internal.os.LoggingPrintStream: void <init>()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.LoggingPrintStream: void <init>()>" -> "<java.io.PrintStream: void <init>(java.io.OutputStream)>";
"<java.lang.NullPointerException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.NullPointerException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.logging.Handler: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.logging.Handler: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.logging.AndroidHandler$1: void <init>()>" -> "<java.util.logging.Formatter: void <init>()>";
"<java.lang.ThreadLocal: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ThreadLocal: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.LoggingPrintStream$1: void <init>()>" -> "<java.io.OutputStream: void <init>()>";
"<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>" -> "<java.lang.Object: void <init>()>";
"<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.logging.Formatter: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.logging.Formatter: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.logging.AndroidHandler: void <init>()>" -> "<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>";
"<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void invokeStaticMain(java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>";
"<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.File: boolean setReadable(boolean,boolean)>";
"<java.io.File: boolean setReadable(boolean,boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.io.PrintStream: boolean checkError()>";
"<java.io.PrintStream: boolean checkError()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.io.PrintStream: void println(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.io.PrintStream: void println(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.io.PrintStream: void println(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.io.PrintStream: void println(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.io.PrintStream: void println(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void generateSnapshotHeader(java.lang.String,android.content.pm.PackageInfo,java.io.PrintStream)>" -> "<java.io.PrintStream: void println()>";
"<java.io.PrintStream: void println(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintStream: void println()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadResources()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<java.io.BufferedReader: java.lang.String readLine()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void preloadClasses()>" -> "<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
"<java.lang.Class: java.lang.ClassLoader getClassLoader()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<com.android.internal.os.SamplingProfilerIntegration: void start()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void registerZygoteSocket()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData getHprofData()>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.String: int length()>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: java.lang.String getDefaultUserAgent()>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.SystemProperties: int getInt(java.lang.String,int)>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.ZygoteConnection: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshotFile(java.lang.String,android.content.pm.PackageInfo)>" -> "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
"<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<android.os.SystemProperties: java.lang.String get(java.lang.String)>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.lang.String: int compareTo(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.String: int length()>";
"<java.lang.String: java.lang.String substring(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit: void commonInit()>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String[] split(java.lang.String,int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: int indexOf(int)>";
"<com.android.internal.os.ZygoteConnection$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<java.lang.String: boolean startsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: int indexOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String substring(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String[] split(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String[] split(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteConnection: java.io.FileDescriptor getFileDesciptor()>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<com.android.internal.os.ZygoteConnection: boolean runOnce()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<dalvik.system.Zygote: int forkAndSpecialize(int,int,int[],int,int[][])>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteInit: void setCloseOnExec(java.io.FileDescriptor,boolean)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void applyInvokeWithSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void applyCapabilitiesSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void applyRlimitSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection$Arguments: void <init>(java.lang.String[])>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<java.io.PrintStream: void <init>(java.io.OutputStream)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<android.util.Log: int w(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<com.android.internal.os.ZygoteConnection: void setChildPgid(int)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.util.Log: int w(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<android.os.Process: int getParentPid(int)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.DataInputStream: void <init>(java.io.InputStream)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<android.os.Process: void setArgV0(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void closeServerSocket()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void reopenStdio(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void setCloseOnExec(java.io.FileDescriptor,boolean)>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<java.lang.String: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.RuntimeInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<java.lang.System: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteConnection: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void applyInvokeWithSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyCapabilitiesSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void applyCapabilitiesSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyCapabilitiesSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyCapabilitiesSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyCapabilitiesSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteInit: long capgetPermitted(int)>";
"<com.android.internal.os.ZygoteConnection: void applyRlimitSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<android.os.SystemProperties: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<android.os.SystemProperties: java.lang.String get(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>" -> "<java.io.FileOutputStream: void finalize()>";
"<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>" -> "<java.io.OutputStream: void <init>()>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.lang.Integer: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.lang.String: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void setChildPgid(int)>" -> "<com.android.internal.os.ZygoteInit: void <clinit>()>";
"<com.android.internal.os.ZygoteConnection: void setChildPgid(int)>" -> "<android.util.Log: int i(java.lang.String,java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void setChildPgid(int)>" -> "<com.android.internal.os.ZygoteInit: int setpgid(int,int)>";
"<com.android.internal.os.ZygoteConnection: void setChildPgid(int)>" -> "<com.android.internal.os.ZygoteInit: int getpgid(int)>";
"<android.os.Process: int getParentPid(int)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>" -> "<java.io.FileInputStream: void finalize()>";
"<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>" -> "<java.io.InputStream: void <init>()>";
"<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.reflect.Modifier: boolean isStatic(int)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void <init>(java.lang.reflect.Method,java.lang.String[])>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.reflect.Modifier: boolean isPublic(int)>";
"<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>" -> "<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>";
"<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>" -> "<dalvik.system.Zygote: void execShell(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>" -> "<dalvik.system.Zygote: void appendQuotedShellArgs(java.lang.StringBuilder,java.lang.String[])>";
"<com.android.internal.os.ZygoteSecurityException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.IOException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.io.IOException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" -> "<java.lang.ClassLoader: void <init>()>";
"<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection: void applyUidSecurityPolicy(com.android.internal.os.ZygoteConnection$Arguments,android.net.Credentials)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void invokeStaticMain(java.lang.ClassLoader,java.lang.String,java.lang.String[])>" -> "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>";
"<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: void logAndPrintError(java.io.PrintStream,java.lang.String,java.lang.Throwable)>" -> "<java.io.PrintStream: void println(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.FilterInputStream: void close()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.FilterInputStream: void close()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.FilterInputStream: void close()>";
"<java.io.DataInputStream: int readInt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<java.lang.Throwable: java.lang.String getMessage()>";
"<java.lang.Throwable: java.lang.String getMessage()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void closeSocket()>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<com.android.internal.os.ZygoteConnection: void closeSocket()>";
"<com.android.internal.os.ZygoteConnection: void closeSocket()>" -> "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<com.android.internal.os.ZygoteConnection: java.lang.String[] readArgumentList()>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<com.android.internal.os.ZygoteConnection: void handleChildProc(com.android.internal.os.ZygoteConnection$Arguments,java.io.FileDescriptor[],java.io.FileDescriptor,java.io.PrintStream)>" -> "<com.android.internal.os.ZygoteConnection: void closeSocket()>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.DataOutputStream: void writeInt(int)>";
"<com.android.internal.os.ZygoteConnection: boolean handleParentProc(int,java.io.FileDescriptor[],java.io.FileDescriptor,com.android.internal.os.ZygoteConnection$Arguments)>" -> "<java.io.DataOutputStream: void writeBoolean(boolean)>";
"<java.io.DataOutputStream: void writeInt(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void writeBoolean(boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.RuntimeInit$Arguments: void parseArgs(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: java.lang.Object remove(int)>";
"<java.util.ArrayList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: java.lang.Object remove(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<java.util.ArrayList: java.lang.Object remove(int)>";
"<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void runSelectLoopMode()>" -> "<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>";
"<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer()>" -> "<android.net.LocalServerSocket: android.net.LocalSocket accept()>";
"<android.net.LocalServerSocket: android.net.LocalSocket accept()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void closeServerSocket()>" -> "<android.net.LocalServerSocket: void close()>";
"<android.net.LocalServerSocket: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.io.File: boolean mkdirs()>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.io.File: boolean setWritable(boolean,boolean)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.io.File: boolean setExecutable(boolean,boolean)>";
"<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>" -> "<java.io.File: boolean isDirectory()>";
"<java.io.File: boolean mkdirs()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: boolean setWritable(boolean,boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: boolean setExecutable(boolean,boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: boolean isDirectory()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.ZygoteInit: void <clinit>()>" -> "<java.lang.String: int length()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.android.internal.os.RuntimeInit: void applicationInit(int,java.lang.String[])>" -> "<java.lang.Throwable: java.lang.String getMessage()>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void run()>";
"<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void run()>" -> "<java.lang.RuntimeException: void <init>(java.lang.Throwable)>";
"<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void run()>" -> "<java.lang.RuntimeException: void <init>(java.lang.Throwable)>";
"<com.android.internal.logging.AndroidConfig: void <init>()>" -> "<java.lang.Throwable: void printStackTrace()>";
"<java.lang.Throwable: void printStackTrace()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.android.internal.os.ZygoteConnection: boolean runOnce()>" -> "<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>";
}
