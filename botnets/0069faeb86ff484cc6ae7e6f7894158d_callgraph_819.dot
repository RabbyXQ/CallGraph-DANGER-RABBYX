digraph CallGraph {
"<com.cosina.game.tetri.engine.Game: void main(java.lang.String[])>" -> "<com.cosina.game.tetri.engine.Point: com.cosina.game.tetri.engine.Point c(int,int)>";
"<com.cosina.game.tetri.engine.Game: void main(java.lang.String[])>" -> "<com.cosina.game.tetri.engine.Game$1: void <init>(com.cosina.game.tetri.engine.impl.BoxImpl)>";
"<com.cosina.game.tetri.engine.Game: void main(java.lang.String[])>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: void <init>(com.cosina.game.tetri.engine.Point)>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Point: com.cosina.game.tetri.engine.Point c(int,int)>" -> "<com.cosina.game.tetri.engine.Point: void <init>(int,int)>";
"<com.cosina.game.tetri.engine.Game$1: void <init>(com.cosina.game.tetri.engine.impl.BoxImpl)>" -> "<java.lang.Thread: void <init>()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void <init>(com.cosina.game.tetri.engine.Point)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void <init>(com.cosina.game.tetri.engine.Point)>" -> "<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void <init>(com.cosina.game.tetri.engine.Point)>" -> "<java.util.Observable: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Point: void <init>(int,int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Observable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.Observable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game: void main(java.lang.String[])>" -> "<com.cosina.game.tetri.engine.Game$1: void run()>";
"<com.cosina.game.tetri.engine.Game: void main(java.lang.String[])>" -> "<java.lang.Thread: void start()>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.System: void <clinit>()>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.String: java.lang.String valueOf(int)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuffer: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.Thread: void sleep(long)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.String: void <clinit>()>";
"<java.lang.Thread: void start()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String valueOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void sleep(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: void fill()>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: void handleTimePassEvent()>";
"<com.cosina.game.tetri.engine.Game$1: void run()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: int[][] getContent()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void fill()>" -> "<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void fill()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: boolean checkGoOn()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void fill()>" -> "<com.cosina.game.tetri.engine.ShapeFactory: com.cosina.game.tetri.engine.Shape getRandom()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void handleTimePassEvent()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: void handleAfterDoSth()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: int[][] getContent()>" -> "<java.lang.Integer: void <clinit>()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: int[][] getContent()>" -> "<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: void <init>()>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.Random: void <init>()>";
"<com.cosina.game.tetri.engine.ShapeFactory: com.cosina.game.tetri.engine.Shape getRandom()>" -> "<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void handleAfterDoSth()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: boolean checkCanGoDown()>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void handleAfterDoSth()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: void combine()>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Random: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.Random: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: boolean checkCanGoDown()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: boolean checkGoOn()>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.ShapeFactory: com.cosina.game.tetri.engine.Shape getRandom()>" -> "<java.util.ArrayList: int size()>";
"<java.util.ArrayList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.ShapeFactory: com.cosina.game.tetri.engine.Shape getRandom()>" -> "<java.util.Random: int nextInt(int)>";
"<java.util.Random: int nextInt(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.ShapeFactory: com.cosina.game.tetri.engine.Shape getRandom()>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<java.util.ArrayList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.cosina.game.tetri.engine.ShapeFactory: void <clinit>()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.cosina.game.tetri.engine.impl.BoxImpl: void handleAfterDoSth()>" -> "<com.cosina.game.tetri.engine.impl.BoxImpl: void fill()>";
}
