digraph CallGraph {
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.ObjectType: java.lang.ClassLoader getContextClassLoader()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.io.FileInputStream: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.dump: boolean uriSchemeSpecified(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.dump: boolean uriSchemeSpecified(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.dump: void usage(java.io.PrintStream)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.ClassTypeWriter: void <init>(gnu.bytecode.ClassType,java.io.OutputStream,int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.io.File: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.System: void exit(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.ClassLoader getContextClassLoader()>" -> "<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>" -> "<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>";
"<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>" -> "<gnu.bytecode.ObjectType: java.lang.ClassLoader getContextClassLoader()>";
"<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>" -> "<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>";
"<java.io.FileInputStream: void <init>(java.lang.String)>" -> "<java.io.FileInputStream: void finalize()>";
"<java.io.FileInputStream: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void <init>(java.lang.String)>" -> "<java.io.InputStream: void <init>()>";
"<java.net.URL: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.net.URL: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.dump: int readMagic(java.io.InputStream)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.dump: int readMagic(java.io.InputStream)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.BufferedInputStream: void <init>(java.io.InputStream)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.System: void <clinit>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: boolean uriSchemeSpecified(java.lang.String)>" -> "<java.io.File: void <clinit>()>";
"<gnu.bytecode.dump: boolean uriSchemeSpecified(java.lang.String)>" -> "<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>";
"<gnu.bytecode.dump: void usage(java.io.PrintStream)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.dump: void usage(java.io.PrintStream)>" -> "<java.lang.System: void exit(int)>";
"<gnu.bytecode.ClassTypeWriter: void <init>(gnu.bytecode.ClassType,java.io.OutputStream,int)>" -> "<java.io.PrintWriter: void <init>(java.io.OutputStream)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Byte: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.Method: gnu.bytecode.Method makeCloneMethod(gnu.bytecode.Type)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ObjectType: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(gnu.bytecode.PrimType)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: void <init>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Void: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Character: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Boolean: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Double: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Float: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Long: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.lang.Short: void <clinit>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassType: void <init>()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassFileInput: void <init>(java.io.InputStream)>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>" -> "<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.io.BufferedInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>" -> "<java.lang.Character: void <clinit>()>";
"<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>" -> "<java.lang.Character: boolean isLetterOrDigit(char)>";
"<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>" -> "<java.lang.Character: boolean isLetter(char)>";
"<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>" -> "<java.lang.Character: void <clinit>()>";
"<java.io.PrintWriter: void <init>(java.io.OutputStream)>" -> "<java.io.Writer: void <init>()>";
"<java.io.PrintWriter: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>";
"<gnu.bytecode.Method: gnu.bytecode.Method makeCloneMethod(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Method: gnu.bytecode.Method makeCloneMethod(gnu.bytecode.Type)>" -> "<gnu.bytecode.Method: void <init>()>";
"<gnu.bytecode.ClassType: void <init>(java.lang.String)>" -> "<gnu.bytecode.ObjectType: void <init>()>";
"<gnu.bytecode.ObjectType: void <init>(java.lang.String)>" -> "<gnu.bytecode.Type: void <init>()>";
"<gnu.bytecode.PrimType: void <init>(gnu.bytecode.PrimType)>" -> "<gnu.bytecode.Type: void <init>(java.lang.String,java.lang.String)>";
"<java.util.HashMap: void <init>()>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>" -> "<gnu.bytecode.Type: void registerTypeForClass(java.lang.Class,gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: void <init>(java.lang.String,java.lang.String,int,java.lang.Class)>" -> "<gnu.bytecode.Type: void <init>(java.lang.String,java.lang.String)>";
"<gnu.bytecode.ClassType: void <clinit>()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: void <init>()>" -> "<gnu.bytecode.ObjectType: void <init>()>";
"<gnu.bytecode.ClassFileInput: void <init>(java.io.InputStream)>" -> "<java.io.DataInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Character: boolean isLetterOrDigit(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Character: boolean isLetter(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Writer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Writer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<gnu.bytecode.ClassType: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.Method: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.ObjectType: void <init>()>" -> "<gnu.bytecode.Type: void <init>()>";
"<gnu.bytecode.Type: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.Type: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void registerTypeForClass(java.lang.Class,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: void registerTypeForClass(java.lang.Class,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type$ClassToTypeMap: void <init>()>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(java.lang.String)>" -> "<gnu.bytecode.ArrayType: void <init>(gnu.bytecode.Type,java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(java.lang.String)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>";
"<gnu.bytecode.Type$ClassToTypeMap: void <init>()>" -> "<gnu.kawa.util.AbstractWeakHashTable: void <init>()>";
"<gnu.bytecode.ArrayType: void <init>(gnu.bytecode.Type,java.lang.String)>" -> "<gnu.bytecode.ObjectType: void <init>()>";
"<gnu.kawa.util.AbstractWeakHashTable: void <init>()>" -> "<gnu.kawa.util.AbstractHashTable: void <init>(int)>";
"<gnu.kawa.util.AbstractWeakHashTable: void <init>()>" -> "<java.lang.ref.ReferenceQueue: void <init>()>";
"<gnu.kawa.util.AbstractHashTable: void <init>(int)>" -> "<java.util.AbstractMap: void <init>()>";
"<java.lang.ref.ReferenceQueue: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ref.ReferenceQueue: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void registerTypeForClass(java.lang.Class,gnu.bytecode.Type)>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: void cleanup()>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: int hash(java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: int hashToIndex(int)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: void rehash()>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: int hashToIndex(int)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: gnu.kawa.util.AbstractWeakHashTable$WEntry makeEntry(java.lang.Object,int,java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: boolean valuesEqual(java.lang.Object,java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: void cleanup()>" -> "<gnu.kawa.util.AbstractWeakHashTable: void cleanup(gnu.kawa.util.AbstractHashTable,java.lang.ref.ReferenceQueue)>";
"<gnu.kawa.util.AbstractWeakHashTable: int hash(java.lang.Object)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.kawa.util.AbstractWeakHashTable: int hash(java.lang.Object)>" -> "<java.lang.System: int identityHashCode(java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: gnu.kawa.util.AbstractWeakHashTable$WEntry makeEntry(java.lang.Object,int,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable$WEntry: void <init>(java.lang.Object,gnu.kawa.util.AbstractWeakHashTable,int)>";
"<java.lang.System: int identityHashCode(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.kawa.util.AbstractWeakHashTable$WEntry: void <init>(java.lang.Object,gnu.kawa.util.AbstractWeakHashTable,int)>" -> "<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>";
"<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<java.lang.ref.Reference: void <init>()>";
"<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ref.Reference: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ref.Reference: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: gnu.kawa.util.AbstractWeakHashTable$WEntry[] allocEntries(int)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.util.Map$Entry getEntryNext(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.util.Map$Entry getEntryNext(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: void setEntryNext(java.util.Map$Entry,java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.util.Map$Entry getEntryNext(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: int getEntryHashCode(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractHashTable: int hashToIndex(int)>";
"<gnu.kawa.util.AbstractHashTable: void rehash()>" -> "<gnu.kawa.util.AbstractWeakHashTable: void setEntryNext(java.util.Map$Entry,java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractWeakHashTable: int getEntryHashCode(java.util.Map$Entry)>" -> "<gnu.kawa.util.AbstractWeakHashTable: int getEntryHashCode(gnu.kawa.util.AbstractWeakHashTable$WEntry)>";
"<gnu.kawa.util.AbstractWeakHashTable: void setEntryNext(java.util.Map$Entry,java.util.Map$Entry)>" -> "<gnu.kawa.util.AbstractWeakHashTable: void setEntryNext(gnu.kawa.util.AbstractWeakHashTable$WEntry,gnu.kawa.util.AbstractWeakHashTable$WEntry)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.util.Map$Entry getEntryNext(java.util.Map$Entry)>" -> "<gnu.kawa.util.AbstractWeakHashTable: gnu.kawa.util.AbstractWeakHashTable$WEntry getEntryNext(gnu.kawa.util.AbstractWeakHashTable$WEntry)>";
"<gnu.kawa.util.AbstractWeakHashTable: void cleanup(gnu.kawa.util.AbstractHashTable,java.lang.ref.ReferenceQueue)>" -> "<gnu.kawa.util.AbstractWeakHashTable: int getEntryHashCode(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractWeakHashTable: void cleanup(gnu.kawa.util.AbstractHashTable,java.lang.ref.ReferenceQueue)>" -> "<gnu.kawa.util.AbstractHashTable: int hashToIndex(int)>";
"<gnu.kawa.util.AbstractWeakHashTable: void cleanup(gnu.kawa.util.AbstractHashTable,java.lang.ref.ReferenceQueue)>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.util.Map$Entry getEntryNext(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractWeakHashTable: void cleanup(gnu.kawa.util.AbstractHashTable,java.lang.ref.ReferenceQueue)>" -> "<gnu.kawa.util.AbstractWeakHashTable: void setEntryNext(java.util.Map$Entry,java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable$WEntry: java.lang.Object getValue()>";
"<gnu.kawa.util.AbstractWeakHashTable$WEntry: java.lang.Object getValue()>" -> "<java.lang.ref.Reference: java.lang.Object get()>";
"<java.lang.ref.Reference: java.lang.Object get()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.kawa.util.AbstractHashTable: void <init>(int)>" -> "<gnu.kawa.util.AbstractWeakHashTable: gnu.kawa.util.AbstractWeakHashTable$WEntry[] allocEntries(int)>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<java.lang.String: boolean endsWith(java.lang.String)>";
"<java.lang.String: boolean endsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(java.lang.String)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String substring(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,gnu.bytecode.Type[],gnu.bytecode.Type,int)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,gnu.bytecode.Type[],gnu.bytecode.Type,int)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,gnu.bytecode.Type[],gnu.bytecode.Type,int)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,gnu.bytecode.Type[],gnu.bytecode.Type,int)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,gnu.bytecode.Type[],gnu.bytecode.Type,int)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<java.lang.Error: void <init>(java.lang.String)>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Error: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,gnu.bytecode.Type[],gnu.bytecode.Type,int)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>" -> "<java.lang.Object: boolean equals(java.lang.Object)>";
"<java.lang.Object: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int)>" -> "<gnu.bytecode.Method: void <init>(gnu.bytecode.ClassType,int)>";
"<gnu.bytecode.Method: void <init>(gnu.bytecode.ClassType,int)>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int)>" -> "<gnu.bytecode.Method: void setName(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.ClassType: boolean hasOuterLink()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethods()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethods()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethods()>" -> "<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>";
"<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Method)>";
"<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Constructor)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Method)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Method)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Method)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Constructor)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Constructor)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.bytecode.ClassType: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.bytecode.Type: void registerTypeForClass(java.lang.Class,gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: void <init>(gnu.bytecode.Type,java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<gnu.kawa.util.AbstractHashTable: java.lang.Object get(java.lang.Object)>";
"<gnu.kawa.util.AbstractHashTable: java.lang.Object get(java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object get(java.lang.Object,java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object get(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: java.lang.Object get(java.lang.Object,java.lang.Object)>";
"<gnu.kawa.util.AbstractWeakHashTable: java.lang.Object get(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: void cleanup()>";
"<gnu.kawa.util.AbstractHashTable: java.lang.Object get(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: java.util.Map$Entry getNode(java.lang.Object)>";
"<gnu.kawa.util.AbstractHashTable: java.util.Map$Entry getNode(java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: int hash(java.lang.Object)>";
"<gnu.kawa.util.AbstractHashTable: java.util.Map$Entry getNode(java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: int hashToIndex(int)>";
"<gnu.kawa.util.AbstractHashTable: java.util.Map$Entry getNode(java.lang.Object)>" -> "<gnu.kawa.util.AbstractHashTable: boolean matches(java.lang.Object,int,java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: java.util.Map$Entry getNode(java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable: java.util.Map$Entry getEntryNext(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: boolean matches(java.lang.Object,int,java.util.Map$Entry)>" -> "<gnu.kawa.util.AbstractWeakHashTable: int getEntryHashCode(java.util.Map$Entry)>";
"<gnu.kawa.util.AbstractHashTable: boolean matches(java.lang.Object,int,java.util.Map$Entry)>" -> "<gnu.kawa.util.AbstractHashTable: boolean matches(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Constructor)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Method)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>";
"<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<gnu.bytecode.ObjectType: java.lang.String getInternalName()>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ObjectType: java.lang.String getInternalName()>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ClassType: boolean hasOuterLink()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Field getFields()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Field getFields()>" -> "<gnu.bytecode.ClassType: void addFields()>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Field addField(java.lang.String,gnu.bytecode.Type,int)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Field addField(java.lang.String,gnu.bytecode.Type,int)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Field addField(java.lang.String,gnu.bytecode.Type)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Field addField(java.lang.String,gnu.bytecode.Type)>" -> "<gnu.bytecode.Field: void <init>(gnu.bytecode.ClassType)>";
"<gnu.bytecode.Field: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Location: void <init>()>";
"<gnu.bytecode.Location: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Field addField(java.lang.String,gnu.bytecode.Type)>" -> "<gnu.bytecode.Location: void setName(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Field addField(java.lang.String,gnu.bytecode.Type)>" -> "<gnu.bytecode.Location: void setType(gnu.bytecode.Type)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.Method: java.lang.String getName()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.Method: gnu.bytecode.Type[] getParameterTypes()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int,gnu.bytecode.Type[],gnu.bytecode.Type)>" -> "<gnu.bytecode.Method: gnu.bytecode.Type getReturnType()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.Type: java.lang.String getSignature()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.ArrayType: java.lang.String getSignature()>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<gnu.bytecode.Type: void setSignature(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<gnu.bytecode.ClassType: boolean hasOuterLink()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethods()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<gnu.bytecode.Method: java.lang.String getName()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,int)>" -> "<gnu.bytecode.Method: gnu.bytecode.Type[] getParameterTypes()>";
"<gnu.bytecode.ClassType: void <init>(java.lang.String)>" -> "<gnu.bytecode.ClassType: void setName(java.lang.String)>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<gnu.bytecode.Type: void setSignature(java.lang.String)>";
"<gnu.bytecode.ClassType: void setName(java.lang.String)>" -> "<java.lang.String: java.lang.String replace(char,char)>";
"<java.lang.String: java.lang.String replace(char,char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object get(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<gnu.bytecode.Type: gnu.bytecode.Type getType(java.lang.String)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>";
"<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassFileInput: void readFormatVersion()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.dump: gnu.bytecode.ConstantPool readConstants()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassFileInput: void readClassInfo()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassFileInput: void readFields()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassFileInput: void readMethods()>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.dump: gnu.bytecode.ConstantPool readConstants()>" -> "<gnu.bytecode.ClassFileInput: gnu.bytecode.ConstantPool readConstants()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.ConstantPool readConstants()>" -> "<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolClass getForcedClass(int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<java.lang.ClassFormatError: void <init>(java.lang.String)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolNameAndType: void <init>()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolRef: void <init>(int)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolString: void <init>()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolClass: void <init>()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolValue2: void <init>(int)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolValue1: void <init>(int)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolUtf8: void <init>()>";
"<java.lang.ClassFormatError: void <init>(java.lang.String)>" -> "<java.lang.LinkageError: void <init>()>";
"<java.lang.ClassFormatError: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void <init>()>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<gnu.bytecode.CpoolRef: void <init>(int)>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<gnu.bytecode.CpoolString: void <init>()>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<gnu.bytecode.CpoolClass: void <init>()>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<gnu.bytecode.CpoolValue2: void <init>(int)>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<gnu.bytecode.CpoolValue1: void <init>(int)>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<gnu.bytecode.CpoolUtf8: void <init>()>" -> "<gnu.bytecode.CpoolEntry: void <init>()>";
"<java.lang.LinkageError: void <init>()>" -> "<java.lang.Error: void <init>()>";
"<java.lang.LinkageError: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CpoolEntry: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Error: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Error: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolClass getForcedClass(int)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolUtf8: int getTag()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolValue1: int getTag()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolValue2: int getTag()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolClass: int getTag()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolString: int getTag()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolRef: int getTag()>";
"<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>" -> "<gnu.bytecode.CpoolNameAndType: int getTag()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readInt()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.dump: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>";
"<java.io.DataInputStream: int readUnsignedShort()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: int readInt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void <clinit>()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.MiscAttr: void <init>(java.lang.String,byte[])>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SourceDebugExtAttr: void <init>(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.EnclosingMethodAttr: void <init>(int,int,gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.InnerClassesAttr: void <init>(short[],gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ConstantValueAttr: void <init>(int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.RuntimeAnnotationsAttr: void <init>(java.lang.String,byte[],gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.StackMapTableAttr: void <init>(byte[],gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SignatureAttr: void <init>(int,gnu.bytecode.Member)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Scope: void <init>(gnu.bytecode.Label,gnu.bytecode.Label)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Label: void <init>(int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Label: void <init>(int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Variable: void <init>()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Label: void <init>(int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LocalVarsAttr: void <init>(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LineNumbersAttr: void <init>(short[],gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void <init>(gnu.bytecode.Method)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SourceFileAttr: void <init>(int,gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.StackMapTableAttr: void <clinit>()>";
"<gnu.bytecode.MiscAttr: void <init>(java.lang.String,byte[])>" -> "<gnu.bytecode.MiscAttr: void <init>(java.lang.String,byte[],int,int)>";
"<gnu.bytecode.SourceDebugExtAttr: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void <init>(int,int,gnu.bytecode.ClassType)>" -> "<gnu.bytecode.EnclosingMethodAttr: void <init>(gnu.bytecode.ClassType)>";
"<gnu.bytecode.InnerClassesAttr: void <init>(short[],gnu.bytecode.ClassType)>" -> "<gnu.bytecode.InnerClassesAttr: void <init>(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ConstantValueAttr: void <init>(int)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void <init>(java.lang.String,byte[],gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.MiscAttr: void <init>(java.lang.String,byte[],int,int)>";
"<gnu.bytecode.StackMapTableAttr: void <init>(byte[],gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.MiscAttr: void <init>(java.lang.String,byte[],int,int)>";
"<gnu.bytecode.SignatureAttr: void <init>(int,gnu.bytecode.Member)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.Scope: void <init>(gnu.bytecode.Label,gnu.bytecode.Label)>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.Label: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.Variable: void <init>()>" -> "<gnu.bytecode.Location: void <init>()>";
"<gnu.bytecode.LocalVarsAttr: void <init>(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void <init>(short[],gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.LineNumbersAttr: void <init>(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.CodeAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.SourceFileAttr: void <init>(int,gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.MiscAttr: void <init>(java.lang.String,byte[],int,int)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.Attribute: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.EnclosingMethodAttr: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void <init>(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: void setContainer(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: void setNext(gnu.bytecode.Attribute)>";
"<gnu.bytecode.LineNumbersAttr: void <init>(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.LocalVarsAttr: void <init>(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.StackMapTableAttr: void <init>(byte[],gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.StackMapTableAttr: void <init>(byte[],gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void <init>(java.lang.String,byte[],gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void <init>(java.lang.String,byte[],gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.InnerClassesAttr: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.EnclosingMethodAttr: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.SourceDebugExtAttr: void <init>(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Scope: void linkChild(gnu.bytecode.Scope)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Location: void setName(int,gnu.bytecode.ConstantPool)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Location: void setSignature(int,gnu.bytecode.ConstantPool)>";
"<gnu.bytecode.Location: void setSignature(int,gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Location: void setSignature(int,gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Scope: void addVariable(gnu.bytecode.Variable)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LocalVarsAttr: gnu.bytecode.Method getMethod()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void setMaxStack(int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void setMaxLocals(int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void setCode(byte[])>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void addHandler(int,int,int,int)>";
"<gnu.bytecode.CodeAttr: void addHandler(int,int,int,int)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.CodeAttr: void addHandler(int,int,int,int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.SignatureAttr: void <init>(int,gnu.bytecode.Member)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType getDeclaringClass()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getDeclaringClass()>" -> "<gnu.bytecode.ClassType: void addEnclosingMember()>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Method)>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.reflect.Constructor)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readInt()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: void readFully(byte[])>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: short readShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: void readFully(byte[],int,int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: void readFully(byte[],int,int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: short readShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: short readShort()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: void readFully(byte[],int,int)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<java.io.DataInputStream: void readFully(byte[],int,int)>";
"<java.io.DataInputStream: void readFully(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: short readShort()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: void readFully(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: int getNameIndex()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: void setNameIndex(int)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: gnu.bytecode.Attribute getNext()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: void setNext(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: gnu.bytecode.Attribute getNext()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: void setNext(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.LocalVarsAttr: void <init>(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Attribute: gnu.bytecode.AttrContainer getContainer()>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Method addMethod(java.lang.String,int)>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<gnu.bytecode.Method: void setName(int)>";
"<gnu.bytecode.ClassFileInput: void readMethods()>" -> "<gnu.bytecode.Method: void setSignature(int)>";
"<gnu.bytecode.Method: void setSignature(int)>" -> "<gnu.bytecode.Method: gnu.bytecode.ConstantPool getConstants()>";
"<gnu.bytecode.Method: void setSignature(int)>" -> "<gnu.bytecode.Method: void setSignature(java.lang.String)>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String,int,int)>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.lang.ClassFormatError: void <init>(java.lang.String)>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.util.Stack: void <init>()>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.lang.ClassFormatError: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>" -> "<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>";
"<java.util.Stack: void <init>()>" -> "<java.util.Vector: void <init>()>";
"<java.util.Stack: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Vector: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.Vector: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.util.Vector: int size()>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.util.Vector: int size()>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.util.Stack: java.lang.Object pop()>";
"<gnu.bytecode.Method: void setSignature(java.lang.String)>" -> "<java.util.Stack: java.lang.Object push(java.lang.Object)>";
"<java.util.Vector: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Stack: java.lang.Object pop()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Stack: java.lang.Object push(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Method: void setName(int)>" -> "<gnu.bytecode.Method: gnu.bytecode.ConstantPool getConstants()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.SignatureAttr: void <init>(int,gnu.bytecode.Member)>" -> "<gnu.bytecode.Method: gnu.bytecode.ClassType getDeclaringClass()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.Scope pushScope()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.ConstantPool getConstants()>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: void setExceptions(short[])>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.Attribute readAttribute(java.lang.String,int,gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.ExceptionsAttr getExceptionAttr()>";
"<gnu.bytecode.Method: void setExceptions(short[])>" -> "<gnu.bytecode.ExceptionsAttr: void <init>(gnu.bytecode.Method)>";
"<gnu.bytecode.ExceptionsAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.ExceptionsAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.Method: void setExceptions(short[])>" -> "<gnu.bytecode.ExceptionsAttr: void setExceptions(short[],gnu.bytecode.ClassType)>";
"<gnu.bytecode.ExceptionsAttr: void setExceptions(short[],gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ExceptionsAttr: void setExceptions(short[],gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ExceptionsAttr: void setExceptions(short[],gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ConstantPool getConstants()>";
"<gnu.bytecode.Method: gnu.bytecode.Scope pushScope()>" -> "<gnu.bytecode.Method: void prepareCode(int)>";
"<gnu.bytecode.Method: void prepareCode(int)>" -> "<gnu.bytecode.CodeAttr: void <clinit>()>";
"<gnu.bytecode.Method: void prepareCode(int)>" -> "<gnu.bytecode.CodeAttr: void <init>(gnu.bytecode.Method)>";
"<gnu.bytecode.Method: void prepareCode(int)>" -> "<gnu.bytecode.CodeAttr: void reserve(int)>";
"<gnu.bytecode.CodeAttr: void reserve(int)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.CodeAttr: void reserve(int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.CodeAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.Method: gnu.bytecode.ClassType getDeclaringClass()>";
"<gnu.bytecode.CodeAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.ClassType: short getClassfileMajorVersion()>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Field addField()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Field addField()>" -> "<gnu.bytecode.Field: void <init>(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<gnu.bytecode.Location: void setName(int,gnu.bytecode.ConstantPool)>";
"<gnu.bytecode.ClassFileInput: void readFields()>" -> "<gnu.bytecode.Location: void setSignature(int,gnu.bytecode.ConstantPool)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.Attribute: void addToFrontOf(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: void setAttributes(gnu.bytecode.Attribute)>";
"<gnu.bytecode.SignatureAttr: void <init>(int,gnu.bytecode.Member)>" -> "<gnu.bytecode.Field: gnu.bytecode.ClassType getDeclaringClass()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.Type: void setSignature(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ClassType: void setSuper(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ClassType: void setSuper(java.lang.String)>";
"<gnu.bytecode.ClassType: void setSuper(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: void setSuper(java.lang.String)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.ClassType: void setSuper(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: void setSuper(java.lang.String)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassType: void setSuper(java.lang.String)>" -> "<gnu.bytecode.ClassType: void setSuper(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ClassFileInput: gnu.bytecode.CpoolClass getClassConstant(int)>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ClassFileInput: gnu.bytecode.CpoolClass getClassConstant(int)>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: byte readByte()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: java.lang.String readUTF()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readInt()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: long readLong()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ConstantPool: void <init>(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<java.io.DataInputStream: byte readByte()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: java.lang.String readUTF()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: long readLong()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: void readFormatVersion()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ClassFileInput: void readFormatVersion()>" -> "<java.io.DataInputStream: int readUnsignedShort()>";
"<gnu.bytecode.ObjectType: java.lang.String getInternalName()>" -> "<java.lang.String: java.lang.String replace(char,char)>";
"<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>" -> "<java.lang.String: java.lang.String replace(char,char)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.BufferedInputStream: void mark(int)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.BufferedInputStream: void reset()>";
"<java.io.BufferedInputStream: void mark(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedInputStream: void reset()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: int readMagic(java.io.InputStream)>" -> "<java.util.zip.InflaterInputStream: int read()>";
"<gnu.bytecode.dump: int readMagic(java.io.InputStream)>" -> "<java.io.BufferedInputStream: int read()>";
"<java.util.zip.InflaterInputStream: int read()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedInputStream: int read()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ObjectType: java.lang.Class getContextClass(java.lang.String)>" -> "<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
"<java.lang.Class: java.lang.ClassLoader getClassLoader()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<java.lang.Class: java.lang.Class getEnclosingClass()>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<java.lang.Class: boolean isMemberClass()>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>";
"<gnu.bytecode.ClassType: void addEnclosingMember()>" -> "<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>";
"<java.lang.Class: boolean isMemberClass()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>";
"<gnu.bytecode.ClassType: void addFields()>" -> "<java.lang.Class: java.lang.reflect.Field[] getFields()>";
"<java.lang.Class: java.lang.reflect.Field[] getFields()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.lang.Class: boolean isArray()>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.lang.Class: java.lang.Class getComponentType()>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.lang.Class: boolean isPrimitive()>";
"<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>" -> "<java.lang.Class: java.lang.String getName()>";
"<java.lang.Class: boolean isArray()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.Class getComponentType()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: boolean isPrimitive()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.String getName()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>" -> "<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>";
"<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>" -> "<java.lang.Class: java.lang.reflect.Method[] getMethods()>";
"<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>" -> "<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>";
"<gnu.bytecode.ClassType: void addMethods(java.lang.Class)>" -> "<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>";
"<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Method[] getMethods()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
"<gnu.bytecode.ObjectType: java.lang.ClassLoader getContextClassLoader()>" -> "<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.Throwable: void printStackTrace()>";
"<java.lang.Throwable: void printStackTrace()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: java.net.URLConnection openConnection()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: java.net.URLConnection openConnection()>";
"<java.net.URL: java.net.URLConnection openConnection()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: java.lang.String toString()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: java.lang.String getFile()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: java.net.URLConnection openConnection()>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.net.URL: java.lang.String toString()>";
"<java.net.URL: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: java.lang.String getFile()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.io.File: java.net.URI toURI()>";
"<java.io.File: java.net.URI toURI()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<gnu.bytecode.ClassTypeWriter: void setFlags(int)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.dump: void process(java.io.InputStream,java.lang.String,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<java.io.PrintWriter: void print(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void println(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void println()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void print(gnu.bytecode.ClassType)>";
"<gnu.bytecode.dump: void <init>(java.io.InputStream,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void flush()>";
"<java.io.PrintWriter: void flush()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void print(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassTypeWriter: void print()>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantPool()>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassTypeWriter: void printClassInfo()>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassTypeWriter: void printFields()>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassTypeWriter: void printMethods()>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassTypeWriter: void printAttributes()>";
"<java.io.PrintWriter: void print(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.Access: java.lang.String toString(int,char)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<gnu.bytecode.Access: java.lang.String toString(int,char)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes()>" -> "<gnu.bytecode.Attribute: int count(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.Integer: java.lang.String toHexString(int)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: void <init>()>";
"<java.lang.Integer: java.lang.String toHexString(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Access: java.lang.String toString(int,char)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes()>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes()>" -> "<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>";
"<java.io.PrintWriter: void println(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.Attribute: int count(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassTypeWriter: void printMethods()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printMethods()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printMethods()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void printMethods()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printMethods()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printMethods()>" -> "<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.Access: java.lang.String toString(int,char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>";
"<java.io.PrintWriter: void print(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>" -> "<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.StringBuffer: void <init>(int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<java.lang.StringBuffer: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: int indexOf(int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<gnu.bytecode.Type: java.lang.String signatureToName(java.lang.String)>" -> "<java.lang.String: java.lang.String replace(char,char)>";
"<java.lang.String: java.lang.String substring(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: int indexOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>";
"<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printMethod(gnu.bytecode.Method)>" -> "<gnu.bytecode.Method: java.lang.String getName()>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: java.lang.String getSignature()>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: java.lang.String getSignature()>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Method: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void <clinit>()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int[] reallocBuffer(int[],int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.Integer: java.lang.String toString(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int[] reallocBuffer(int[],int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int[] reallocBuffer(int[],int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int[] reallocBuffer(int[],int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void <clinit>()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void <clinit>()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Access: java.lang.String toString(int,char)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: void <clinit>()>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: void <init>(byte[],int,int,java.lang.String)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.Character: void <clinit>()>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.Character: char forDigit(int,int)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.Character: char forDigit(int,int)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: int[] reallocBuffer(int[],int)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.StackMapTableAttr: int[] reallocBuffer(int[],int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<java.lang.Integer: java.lang.String toString(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: void <init>(byte[],int,int,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[],int,int,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Character: char forDigit(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<java.io.PrintWriter: void println(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.MiscAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int getLength()>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int getLength()>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.Object)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<java.io.PrintWriter: void print(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.SourceDebugExtAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.EnclosingMethodAttr: int getLength()>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ConstantPool getConstants()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: int lastIndexOf(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: java.lang.String substring(int)>";
"<java.lang.String: int lastIndexOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: int lastIndexOf(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.InnerClassesAttr: int getLength()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ConstantPool getConstants()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.Object)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.lang.Character: void <clinit>()>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.lang.Character: char forDigit(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getPoolEntry(int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Integer: java.lang.String toHexString(int)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Float: float intBitsToFloat(int)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Integer: java.lang.String toHexString(int)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Float: void <clinit>()>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Long: void <clinit>()>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Long: java.lang.String toHexString(long)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Double: double longBitsToDouble(long)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Long: java.lang.String toHexString(long)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Long: void <clinit>()>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.lang.Double: void <clinit>()>";
"<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>";
"<java.lang.Long: java.lang.String toHexString(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<gnu.bytecode.Type: gnu.bytecode.PrimType signatureToPrimitive(char)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.lang.String: int indexOf(int,int)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.lang.String: java.lang.String replace(char,char)>";
"<java.lang.String: int indexOf(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printName(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printName(java.lang.String)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>" -> "<gnu.bytecode.ClassTypeWriter: gnu.bytecode.CpoolEntry getCpoolEntry(int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolUtf8: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolValue1: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolValue2: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolClass: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolString: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolRef: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolNameAndType: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantTersely(gnu.bytecode.CpoolEntry,int)>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>" -> "<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>";
"<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(long)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(double)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<java.io.PrintWriter: void print(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void print(double)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(float)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<java.io.PrintWriter: void print(float)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantValueAttr: int getLength()>";
"<gnu.bytecode.ConstantValueAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Double: void <init>(double)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Double: double longBitsToDouble(long)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Float: void <init>(float)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Float: float intBitsToFloat(int)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Long: void <init>(long)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Integer: void <init>(int)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Double: void <clinit>()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Float: void <clinit>()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<java.lang.Long: void <clinit>()>";
"<java.lang.Double: void <init>(double)>" -> "<java.lang.Number: void <init>()>";
"<java.lang.Double: void <init>(double)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Float: void <init>(float)>" -> "<java.lang.Number: void <init>()>";
"<java.lang.Float: void <init>(float)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Long: void <init>(long)>" -> "<java.lang.Number: void <init>()>";
"<java.lang.Long: void <init>(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: void <init>(int)>" -> "<java.lang.Number: void <init>()>";
"<java.lang.Integer: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Number: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Number: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getPoolEntry(int)>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolUtf8: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolValue1: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolValue2: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolClass: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolString: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolRef: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolNameAndType: int getTag()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolString: gnu.bytecode.CpoolUtf8 getString()>";
"<gnu.bytecode.ConstantValueAttr: java.lang.Object getValue(gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.CpoolUtf8: java.lang.String getString()>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.ClassTypeWriter: void printQuotedString(java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int getLength()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printSpaces(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printSpaces(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.Type: void printSignature(java.lang.String,int,int,java.io.PrintWriter)>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.ClassTypeWriter: gnu.bytecode.CpoolEntry getCpoolEntry(int)>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolUtf8: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolValue1: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolValue2: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolClass: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolString: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolRef: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>" -> "<gnu.bytecode.CpoolNameAndType: int getTag()>";
"<gnu.bytecode.ClassTypeWriter: void printSpaces(int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: gnu.bytecode.CpoolEntry getCpoolEntry(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(gnu.bytecode.CpoolEntry)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printContantUtf8AsClass(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printSpaces(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printSpaces(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolUtf8: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolValue1: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolValue2: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolClass: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolString: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolRef: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolNameAndType: int getTag()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u1()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotation(int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2()>";
"<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.RuntimeAnnotationsAttr: void printAnnotationElementValue(int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.MiscAttr: int u1()>" -> "<gnu.bytecode.MiscAttr: int u1(int)>";
"<gnu.bytecode.MiscAttr: int u2()>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int getLength()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: gnu.bytecode.Method getMethod()>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u1(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int extractVerificationTypes(int,int,int,int[])>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int extractVerificationTypes(int,int,int,int[])>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int extractVerificationTypes(int,int,int,int[])>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: int extractVerificationTypes(int,int,int,int[])>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationTypes(int[],int,int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.StackMapTableAttr: void printVerificationType(int,gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.StackMapTableAttr: int extractVerificationTypes(int,int,int,int[])>" -> "<gnu.bytecode.StackMapTableAttr: int extractVerificationType(int,int)>";
"<gnu.bytecode.StackMapTableAttr: int extractVerificationType(int,int)>" -> "<gnu.bytecode.MiscAttr: int u2(int)>";
"<gnu.bytecode.StackMapTableAttr: gnu.bytecode.Method getMethod()>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Method getMethod()>";
"<gnu.bytecode.CodeAttr: gnu.bytecode.Method getMethod()>" -> "<gnu.bytecode.Attribute: gnu.bytecode.AttrContainer getContainer()>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.SignatureAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.SignatureAttr: java.lang.String getSignature()>";
"<gnu.bytecode.Attribute: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.SignatureAttr: int getLength()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.LocalVarsAttr: gnu.bytecode.VarEnumerator allVars()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.LocalVarsAttr: int getLength()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.LocalVarsAttr: int getCount()>";
"<gnu.bytecode.LocalVarsAttr: gnu.bytecode.VarEnumerator allVars()>" -> "<gnu.bytecode.VarEnumerator: void <init>(gnu.bytecode.Scope)>";
"<gnu.bytecode.VarEnumerator: void <init>(gnu.bytecode.Scope)>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.VarEnumerator: void reset()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.VarEnumerator: gnu.bytecode.Variable nextVar()>";
"<gnu.bytecode.VarEnumerator: void reset()>" -> "<gnu.bytecode.VarEnumerator: void fixup()>";
"<gnu.bytecode.VarEnumerator: gnu.bytecode.Variable nextVar()>" -> "<gnu.bytecode.VarEnumerator: void fixup()>";
"<gnu.bytecode.VarEnumerator: void <init>(gnu.bytecode.Scope)>" -> "<gnu.bytecode.VarEnumerator: void reset()>";
"<gnu.bytecode.LocalVarsAttr: int getCount()>" -> "<gnu.bytecode.LocalVarsAttr: gnu.bytecode.VarEnumerator allVars()>";
"<gnu.bytecode.LocalVarsAttr: int getCount()>" -> "<gnu.bytecode.VarEnumerator: gnu.bytecode.Variable nextVar()>";
"<gnu.bytecode.LocalVarsAttr: int getLength()>" -> "<gnu.bytecode.LocalVarsAttr: int getCount()>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.LineNumbersAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.LineNumbersAttr: int getLength()>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CodeAttr: int getLength()>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CodeAttr: int getCodeLength()>";
"<gnu.bytecode.CodeAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>";
"<gnu.bytecode.CodeAttr: int getLength()>" -> "<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.Integer: void <clinit>()>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readInt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.Integer: java.lang.String toString(int)>";
"<gnu.bytecode.CodeAttr: int readInt(int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: int readInt(int)>" -> "<gnu.bytecode.CodeAttr: int readUnsignedShort(int)>";
"<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>" -> "<java.lang.String: int indexOf(int,int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void write(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void write(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.CodeAttr: void disAssemble(gnu.bytecode.ClassTypeWriter,int,int)>" -> "<java.io.PrintWriter: void print(int)>";
"<java.io.PrintWriter: void write(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantOperand(int)>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.CodeAttr: void print(java.lang.String,int,java.io.PrintWriter)>" -> "<java.io.PrintWriter: void write(java.lang.String,int,int)>";
"<java.io.PrintWriter: void write(java.lang.String,int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CodeAttr: int getLength()>" -> "<gnu.bytecode.CodeAttr: int getCodeLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: boolean isSkipped()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SourceFileAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LineNumbersAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.LocalVarsAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SignatureAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.MiscAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ConstantValueAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.InnerClassesAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.EnclosingMethodAttr: int getLength()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.SourceDebugExtAttr: int getLength()>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(char)>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.SourceFileAttr: int getLength()>";
"<gnu.bytecode.SourceFileAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.SourceFileAttr: java.lang.String getSourceFile()>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<gnu.bytecode.ClassTypeWriter: void printSignature(gnu.bytecode.Type)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>";
"<gnu.bytecode.ClassTypeWriter: void printFields()>" -> "<gnu.bytecode.Location: java.lang.String getName()>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Field: gnu.bytecode.Attribute getAttributes()>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printClassInfo()>" -> "<gnu.bytecode.ClassType: int getModifiers()>";
"<gnu.bytecode.ClassType: int getModifiers()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: int getModifiers()>" -> "<java.lang.Class: int getModifiers()>";
"<java.lang.Class: int getModifiers()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<java.io.PrintWriter: void print(char)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void printConstantPool()>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassType: short getClassfileMajorVersion()>";
"<gnu.bytecode.ClassTypeWriter: void print()>" -> "<gnu.bytecode.ClassType: short getClassfileMinorVersion()>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolUtf8: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolValue1: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolValue2: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolClass: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolString: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolRef: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolNameAndType: void print(gnu.bytecode.ClassTypeWriter,int)>";
"<gnu.bytecode.EnclosingMethodAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolClass: java.lang.String getStringName()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolClass getForcedClass(int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolClass: java.lang.String getClassName()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.CpoolClass: java.lang.String getStringName()>";
"<gnu.bytecode.ExceptionsAttr: void setExceptions(short[],gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getPoolEntry(int)>";
"<gnu.bytecode.ExceptionsAttr: void setExceptions(short[],gnu.bytecode.ClassType)>" -> "<gnu.bytecode.CpoolClass: gnu.bytecode.ObjectType getClassType()>";
"<gnu.bytecode.CpoolClass: gnu.bytecode.ObjectType getClassType()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.CpoolClass: gnu.bytecode.ObjectType getClassType()>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType make(java.lang.String)>";
"<gnu.bytecode.CpoolClass: gnu.bytecode.ObjectType getClassType()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type signatureToType(java.lang.String)>";
"<gnu.bytecode.CpoolClass: gnu.bytecode.ObjectType getClassType()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.CpoolClass: gnu.bytecode.ObjectType getClassType()>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<gnu.bytecode.ArrayType: java.lang.String getSignature()>";
"<gnu.bytecode.ArrayType: java.lang.String getSignature()>" -> "<gnu.bytecode.Type: java.lang.String getSignature()>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.ClassTypeWriter: void printSignature(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.ClassTypeWriter: int printSignature(java.lang.String,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: int signatureLength(java.lang.String,int)>" -> "<java.lang.String: int indexOf(int,int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: int lastIndexOf(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: int indexOf(int,int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<gnu.bytecode.dump: void main(java.lang.String[])>" -> "<java.lang.String: java.lang.String replace(char,char)>";
"<java.lang.String: boolean startsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.dump: boolean uriSchemeSpecified(java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.dump: int uriSchemeLength(java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.VarEnumerator: void fixup()>" -> "<gnu.bytecode.Scope: gnu.bytecode.Variable firstVar()>";
"<gnu.bytecode.VarEnumerator: void reset()>" -> "<gnu.bytecode.Scope: gnu.bytecode.Variable firstVar()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassType: int getModifiers()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassType: java.lang.String getSimpleName()>";
"<gnu.bytecode.InnerClassesAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.String: int lastIndexOf(int)>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.String: java.lang.String substring(int)>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.String: int lastIndexOf(int)>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.String: int length()>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.String: java.lang.String substring(int)>";
"<gnu.bytecode.ClassType: java.lang.String getSimpleName()>" -> "<java.lang.Class: java.lang.String getSimpleName()>";
"<java.lang.Class: java.lang.String getSimpleName()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassFileInput: gnu.bytecode.CpoolClass getClassConstant(int)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ClassTypeWriter: void printAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(int)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println(int)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printOptionalIndex(int)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ClassTypeWriter: void printConstantTersely(int,int)>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<java.io.PrintWriter: void println()>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Attribute: java.lang.String getName()>";
"<gnu.bytecode.ExceptionsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.ExceptionsAttr: int getLength()>";
"<gnu.bytecode.Method: gnu.bytecode.Scope pushScope()>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Scope pushScope()>";
"<gnu.bytecode.CodeAttr: gnu.bytecode.Scope pushScope()>" -> "<gnu.bytecode.Scope: void <init>()>";
"<gnu.bytecode.CodeAttr: gnu.bytecode.Scope pushScope()>" -> "<gnu.bytecode.LocalVarsAttr: void <init>(gnu.bytecode.Method)>";
"<gnu.bytecode.Scope: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<gnu.bytecode.LocalVarsAttr: void <init>(gnu.bytecode.Method)>" -> "<gnu.bytecode.Attribute: void <init>(java.lang.String)>";
"<gnu.bytecode.CodeAttr: gnu.bytecode.Scope pushScope()>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Method getMethod()>";
"<gnu.bytecode.CodeAttr: gnu.bytecode.Scope pushScope()>" -> "<gnu.bytecode.CodeAttr: void enterScope(gnu.bytecode.Scope)>";
"<gnu.bytecode.CodeAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Scope: void setStartPC(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.Scope: void setStartPC(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void <init>()>";
"<gnu.bytecode.Label: void <init>()>" -> "<gnu.bytecode.Label: void <init>(int)>";
"<gnu.bytecode.Scope: void setStartPC(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void define(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.Label: void define(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void setTypes(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.Label: void define(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void defineRaw(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.CodeAttr)>" -> "<java.lang.InternalError: void <init>()>";
"<gnu.bytecode.Label: void defineRaw(gnu.bytecode.CodeAttr)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<java.lang.InternalError: void <init>()>" -> "<java.lang.VirtualMachineError: void <init>()>";
"<java.lang.InternalError: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.VirtualMachineError: void <init>()>" -> "<java.lang.Error: void <init>()>";
"<java.lang.VirtualMachineError: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void addTypeChangeListeners(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<gnu.bytecode.Label: void mergeLocalType(int,gnu.bytecode.Type)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<java.lang.InternalError: void <init>(java.lang.String)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Label: void mergeLocalType(int,gnu.bytecode.Type)>" -> "<gnu.bytecode.Label: void notifyTypeChangeListeners(int,gnu.bytecode.Type)>";
"<java.lang.InternalError: void <init>(java.lang.String)>" -> "<java.lang.VirtualMachineError: void <init>()>";
"<java.lang.InternalError: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Label: void notifyTypeChangeListeners(int,gnu.bytecode.Type)>" -> "<gnu.bytecode.Label: void mergeLocalType(int,gnu.bytecode.Type)>";
"<gnu.bytecode.Label: void notifyTypeChangeListeners(int,gnu.bytecode.Type)>" -> "<gnu.bytecode.Label: void mergeLocalType(int,gnu.bytecode.Type)>";
"<gnu.bytecode.Label: void setTypes(gnu.bytecode.Type[],int,gnu.bytecode.Type[],int)>" -> "<gnu.bytecode.Label: gnu.bytecode.Type mergeTypes(gnu.bytecode.Type,gnu.bytecode.Type)>";
"<gnu.bytecode.Label: gnu.bytecode.Type mergeTypes(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Label: gnu.bytecode.Type mergeTypes(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: boolean isInterface()>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<gnu.bytecode.ClassType: boolean isInterface()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>" -> "<java.lang.Class: java.lang.Class getSuperclass()>";
"<java.lang.Class: java.lang.Class getSuperclass()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: boolean isInterface()>" -> "<gnu.bytecode.ClassType: int getModifiers()>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: gnu.bytecode.Type promotedType()>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: gnu.bytecode.Type promotedType()>";
"<gnu.bytecode.PrimType: gnu.bytecode.Type promotedType()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: gnu.bytecode.Type promotedType()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.PrimType: gnu.bytecode.Type promotedType()>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>";
"<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: char findInHierarchy(java.lang.String)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: int swappedCompareResult(int)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: int compare(gnu.bytecode.PrimType,gnu.bytecode.PrimType)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: int swappedCompareResult(int)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.PrimType: char findInHierarchy(java.lang.String)>" -> "<java.lang.String: int indexOf(java.lang.String)>";
"<java.lang.String: int indexOf(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.PrimType: char findInHierarchy(java.lang.String)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ObjectType: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ObjectType: gnu.bytecode.Type getImplementationType()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: int swappedCompareResult(int)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: boolean isInterface()>";
"<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: boolean isInterface()>";
"<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>";
"<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>";
"<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>";
"<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type make(java.lang.Class)>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<gnu.bytecode.ClassType: void <clinit>()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ClassType: boolean implementsInterface(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<gnu.bytecode.ObjectType: java.lang.Class getReflectClass()>";
"<gnu.bytecode.ClassType: gnu.bytecode.ClassType[] getInterfaces()>" -> "<java.lang.Class: java.lang.Class[] getInterfaces()>";
"<java.lang.Class: java.lang.Class[] getInterfaces()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: boolean isSubclass(gnu.bytecode.ClassType)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: boolean isInterface()>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.PrimType,gnu.bytecode.PrimType)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.PrimType,gnu.bytecode.PrimType)>" -> "<java.lang.String: char charAt(int)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: boolean isInterface()>";
"<gnu.bytecode.Type: gnu.bytecode.Type lowestCommonSuperType(gnu.bytecode.Type,gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: gnu.bytecode.ClassType getSuperclass()>";
"<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.Type: java.lang.String getName()>";
"<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ClassType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.PrimType: int compare(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>" -> "<gnu.bytecode.ArrayType: gnu.bytecode.ArrayType make(gnu.bytecode.Type)>";
"<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>" -> "<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>" -> "<gnu.bytecode.ObjectType: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.ArrayType: gnu.bytecode.Type getImplementationType()>" -> "<gnu.bytecode.Type: gnu.bytecode.Type getImplementationType()>";
"<gnu.bytecode.Type: boolean isSubtype(gnu.bytecode.Type)>" -> "<gnu.bytecode.ArrayType: int compare(gnu.bytecode.Type)>";
"<gnu.bytecode.Label: void mergeLocalType(int,gnu.bytecode.Type)>" -> "<gnu.bytecode.Label: gnu.bytecode.Type mergeTypes(gnu.bytecode.Type,gnu.bytecode.Type)>";
"<gnu.bytecode.Scope: void setStartPC(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: boolean reachableHere()>";
"<gnu.bytecode.Scope: void setStartPC(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: void setReachable(boolean)>";
"<gnu.bytecode.Label: void define(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: boolean reachableHere()>";
"<gnu.bytecode.Label: void define(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Label)>";
"<gnu.bytecode.Label: void define(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: void setReachable(boolean)>";
"<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Label)>" -> "<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Type[],gnu.bytecode.Type[])>";
"<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Type[],gnu.bytecode.Type[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Type[],gnu.bytecode.Type[])>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Type[],gnu.bytecode.Type[])>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Type[],gnu.bytecode.Type[])>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.CodeAttr: void setTypes(gnu.bytecode.Type[],gnu.bytecode.Type[])>" -> "<gnu.bytecode.Type: void <clinit>()>";
"<gnu.bytecode.Label: void defineRaw(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: void fixupAdd(int,gnu.bytecode.Label)>";
"<gnu.bytecode.CodeAttr: void fixupAdd(int,gnu.bytecode.Label)>" -> "<gnu.bytecode.CodeAttr: void fixupAdd(int,int,gnu.bytecode.Label)>";
"<gnu.bytecode.CodeAttr: void fixupAdd(int,int,gnu.bytecode.Label)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.CodeAttr: void fixupAdd(int,int,gnu.bytecode.Label)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.CodeAttr: void fixupAdd(int,int,gnu.bytecode.Label)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.Label: void addTypeChangeListeners(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Label: void addTypeChangeListener(int,gnu.bytecode.Label)>";
"<gnu.bytecode.Label: void addTypeChangeListener(int,gnu.bytecode.Label)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.Label: void addTypeChangeListener(int,gnu.bytecode.Label)>" -> "<java.util.ArrayList: void <init>()>";
"<gnu.bytecode.Label: void addTypeChangeListener(int,gnu.bytecode.Label)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.Label: void addTypeChangeListener(int,gnu.bytecode.Label)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<gnu.bytecode.Label: void addTypeChangeListener(int,gnu.bytecode.Label)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.CodeAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.StringBuilder: void <init>()>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Scope: void linkChild(gnu.bytecode.Scope)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Scope: gnu.bytecode.Variable firstVar()>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Variable: boolean isSimple()>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Variable: boolean isAssigned()>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Variable: void allocateLocal(gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Variable: gnu.bytecode.Variable nextVar()>";
"<gnu.bytecode.Variable: void allocateLocal(gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<java.lang.System: void <clinit>()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Location: gnu.bytecode.Type getType()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Location: void setType(gnu.bytecode.Type)>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Type: int getSizeInWords()>";
"<gnu.bytecode.Method: void setName(int)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.Method: void setSignature(int)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.StackMapTableAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Method: boolean getStaticFlag()>";
"<gnu.bytecode.Attribute: int getLengthAll(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ExceptionsAttr: int getLength()>";
"<gnu.bytecode.Location: void setSignature(int,gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.Location: void setName(int,gnu.bytecode.ConstantPool)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.SourceFileAttr: void <init>(int,gnu.bytecode.ClassType)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.SignatureAttr: void <init>(int,gnu.bytecode.Member)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.Attribute: int count(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.Attribute: boolean isSkipped()>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ClassFileInput: int readAttributes(gnu.bytecode.AttrContainer)>" -> "<gnu.bytecode.CpoolUtf8: void intern()>";
"<gnu.bytecode.ClassFileInput: void readClassInfo()>" -> "<gnu.bytecode.ConstantPool: gnu.bytecode.CpoolEntry getForced(int,int)>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.Type: java.lang.String getSignature()>";
"<gnu.bytecode.ClassType: gnu.bytecode.Method getDeclaredMethod(java.lang.String,gnu.bytecode.Type[])>" -> "<gnu.bytecode.ArrayType: java.lang.String getSignature()>";
"<gnu.kawa.util.AbstractWeakHashTable: void cleanup(gnu.kawa.util.AbstractHashTable,java.lang.ref.ReferenceQueue)>" -> "<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>";
"<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.LocalVarsAttr: void enterScope(gnu.bytecode.Scope)>" -> "<gnu.bytecode.Method: gnu.bytecode.CodeAttr getCode()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: int getMaxLocals()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: int getMaxLocals()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: int getMaxLocals()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: void setMaxLocals(int)>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.CodeAttr: gnu.bytecode.Method getMethod()>";
"<gnu.bytecode.Variable: boolean reserveLocal(int,gnu.bytecode.CodeAttr)>" -> "<gnu.bytecode.Method: java.lang.String getName()>";
"<gnu.bytecode.Label: void notifyTypeChangeListeners(int,gnu.bytecode.Type)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<java.util.ArrayList: java.util.Iterator iterator()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<gnu.bytecode.VarEnumerator: gnu.bytecode.Variable nextVar()>" -> "<gnu.bytecode.Variable: gnu.bytecode.Variable nextVar()>";
"<gnu.bytecode.LocalVarsAttr: int getCount()>" -> "<gnu.bytecode.Variable: boolean shouldEmit()>";
"<gnu.bytecode.Variable: boolean shouldEmit()>" -> "<gnu.bytecode.Variable: boolean isSimple()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Variable: boolean isSimple()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Location: java.lang.String getName()>";
"<gnu.bytecode.LocalVarsAttr: void print(gnu.bytecode.ClassTypeWriter)>" -> "<gnu.bytecode.Location: gnu.bytecode.Type getType()>";
"<gnu.kawa.util.AbstractHashTable: boolean matches(java.lang.Object,int,java.util.Map$Entry)>" -> "<gnu.kawa.util.AbstractWeakHashTable$WEntry: java.lang.Object getKey()>";
"<gnu.kawa.util.AbstractWeakHashTable$WEntry: java.lang.Object getKey()>" -> "<java.lang.ref.Reference: java.lang.Object get()>";
"<gnu.kawa.util.AbstractWeakHashTable$WEntry: java.lang.Object getKey()>" -> "<gnu.bytecode.Type$ClassToTypeMap: java.lang.Object getKeyFromValue(java.lang.Object)>";
"<gnu.bytecode.Type$ClassToTypeMap: java.lang.Object getKeyFromValue(java.lang.Object)>" -> "<gnu.bytecode.Type$ClassToTypeMap: java.lang.Class getKeyFromValue(gnu.bytecode.Type)>";
"<gnu.kawa.util.AbstractHashTable: java.lang.Object get(java.lang.Object,java.lang.Object)>" -> "<gnu.kawa.util.AbstractWeakHashTable$WEntry: java.lang.Object getValue()>";
}
