digraph CallGraph {
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void <clinit>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: void <init>(double,int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.String: void <init>(byte[])>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: void <init>(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.String: void <init>(byte[])>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: void <init>(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.Random: void <init>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: void <clinit>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.String: void <clinit>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.String: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.System: void <clinit>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<com.skjegstad.utils.BloomfilterBenchmark: void <clinit>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double log(double)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<com.skjegstad.utils.BloomFilter: void <init>(double,int,int)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double ceil(double)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double log(double)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double log(double)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double log(double)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double ceil(double)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int)>" -> "<java.lang.Math: double log(double)>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void <init>(int)>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Random: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.Random: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: void <clinit>()>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: void <clinit>()>" -> "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int,int)>" -> "<java.lang.Object: void <init>()>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int,int)>" -> "<java.util.BitSet: void <init>(int)>";
"<com.skjegstad.utils.BloomFilter: void <init>(double,int,int)>" -> "<java.lang.Math: double ceil(double)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.BitSet: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.util.BitSet: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void printStat(long,long)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(double)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: int getK()>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: void add(java.lang.Object)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: boolean contains(java.lang.Object)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: boolean contains(java.lang.Object)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: boolean contains(java.lang.Object)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<com.skjegstad.utils.BloomFilter: boolean contains(java.lang.Object)>";
"<com.skjegstad.utils.BloomFilter: void add(java.lang.Object)>" -> "<com.skjegstad.utils.BloomFilter: void <clinit>()>";
"<com.skjegstad.utils.BloomFilter: boolean contains(java.lang.Object)>" -> "<com.skjegstad.utils.BloomFilter: void <clinit>()>";
"<com.skjegstad.utils.BloomFilter: boolean contains(java.lang.Object)>" -> "<com.skjegstad.utils.BloomFilter: boolean contains(byte[])>";
"<com.skjegstad.utils.BloomFilter: boolean contains(byte[])>" -> "<com.skjegstad.utils.BloomFilter: void <clinit>()>";
"<com.skjegstad.utils.BloomFilter: boolean contains(byte[])>" -> "<java.lang.Math: int abs(int)>";
"<com.skjegstad.utils.BloomFilter: boolean contains(byte[])>" -> "<com.skjegstad.utils.BloomFilter: int[] createHashes(byte[],int)>";
"<java.lang.Math: int abs(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: int[] createHashes(byte[],int)>" -> "<com.skjegstad.utils.BloomFilter: void <clinit>()>";
"<com.skjegstad.utils.BloomFilter: void add(java.lang.Object)>" -> "<com.skjegstad.utils.BloomFilter: void add(byte[])>";
"<com.skjegstad.utils.BloomFilter: void add(byte[])>" -> "<com.skjegstad.utils.BloomFilter: void <clinit>()>";
"<com.skjegstad.utils.BloomFilter: void add(byte[])>" -> "<java.lang.Math: int abs(int)>";
"<com.skjegstad.utils.BloomFilter: void add(byte[])>" -> "<com.skjegstad.utils.BloomFilter: int[] createHashes(byte[],int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.Random: void nextBytes(byte[])>";
"<com.skjegstad.utils.BloomfilterBenchmark: void main(java.lang.String[])>" -> "<java.util.Random: void nextBytes(byte[])>";
"<java.util.Random: void nextBytes(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: void add(byte[])>" -> "<java.util.BitSet: void set(int,boolean)>";
"<java.util.BitSet: void set(int,boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.skjegstad.utils.BloomFilter: boolean contains(byte[])>" -> "<java.util.BitSet: boolean get(int)>";
"<java.util.BitSet: boolean get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
