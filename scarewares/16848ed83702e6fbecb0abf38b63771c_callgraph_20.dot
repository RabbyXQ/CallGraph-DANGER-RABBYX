digraph CallGraph {
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<com.yundong.plugin.util.LogUtils: void <clinit>()>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<android.os.Looper: void loop()>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<java.lang.Thread: void <init>(java.lang.Runnable)>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<com.yundong.plugin.service.Daemon$1: void <init>()>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<android.os.Looper: void prepare()>";
"<com.yundong.plugin.service.Daemon: void <clinit>()>" -> "<java.io.File: void <clinit>()>";
"<com.yundong.plugin.service.Daemon: void <clinit>()>" -> "<java.io.File: void <init>(java.io.File,java.lang.String)>";
"<com.yundong.plugin.service.Daemon: void <clinit>()>" -> "<java.io.File: void <init>(java.lang.String,java.lang.String)>";
"<com.yundong.plugin.service.Daemon: void <clinit>()>" -> "<android.os.Environment: java.io.File getDataDirectory()>";
"<com.yundong.plugin.service.Daemon: void <clinit>()>" -> "<android.os.Environment: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>" -> "<com.yundong.plugin.util.LogUtils: void <clinit>()>";
"<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>" -> "<android.util.Log: int d(java.lang.String,java.lang.String)>";
"<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<android.os.Looper: void loop()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.yundong.plugin.service.Daemon$1: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<android.os.Looper: void prepare()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: void <init>(java.io.File,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.io.File,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.os.Environment: java.io.File getDataDirectory()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<android.util.Log: int d(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<com.yundong.plugin.service.Daemon$1: void run()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<com.yundong.plugin.service.Daemon: void <clinit>()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<android.os.SystemClock: void sleep(long)>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<com.yundong.plugin.util.LogUtils: void d(java.lang.String,java.lang.String)>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<com.yundong.plugin.service.Daemon: boolean access$000()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<com.yundong.plugin.util.LogUtils: void <clinit>()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.String: void <clinit>()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<android.os.Build$VERSION: void <clinit>()>";
"<android.os.SystemClock: void sleep(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Runtime: java.lang.Runtime getRuntime()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.yundong.plugin.service.Daemon: boolean access$000()>" -> "<com.yundong.plugin.service.Daemon: void <clinit>()>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.yundong.plugin.service.Daemon$1: void run()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<java.lang.Thread: void run()>";
"<com.yundong.plugin.service.Daemon: void main(java.lang.String[])>" -> "<java.lang.Thread: void start()>";
"<java.lang.Thread: void run()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void start()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
