digraph CallGraph {
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>";
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>";
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[])>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: void <init>(int)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.Integer: java.lang.String toHexString(int)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void <init>(java.io.Writer)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedWriter: void <init>(java.io.Writer)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(char)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void <init>(java.io.Writer)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedWriter: void <init>(java.io.Writer)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.Integer: void <clinit>()>";
"<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>" -> "<java.lang.Object: void <init>()>";
"<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[])>" -> "<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[],int,int)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.Character: void <clinit>()>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReferenceEx: void <init>()>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.Character: boolean isLetterOrDigit(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.Character: boolean isLetter(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: void <init>(int)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<java.io.BufferedReader: void <init>(java.io.Reader)>" -> "<java.io.Reader: void <init>()>";
"<java.io.BufferedReader: void <init>(java.io.Reader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream)>" -> "<java.io.Reader: void <init>()>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>" -> "<java.io.Reader: void <init>()>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: java.lang.String toHexString(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void <init>(java.io.Writer)>" -> "<java.io.Writer: void <init>()>";
"<java.io.PrintWriter: void <init>(java.io.Writer)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedWriter: void <init>(java.io.Writer)>" -> "<java.io.Writer: void <init>()>";
"<java.io.BufferedWriter: void <init>(java.io.Writer)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>" -> "<java.io.Writer: void <init>()>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(char)>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(char)>" -> "<org.htmlparser.util.Translate: int lookup(org.htmlparser.util.CharacterReference[],char,int,int)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(char)>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>" -> "<java.io.Writer: void <init>()>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[],int,int)>" -> "<org.htmlparser.util.sort.Sort: void swap(java.lang.Object[],int,int)>";
"<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[],int,int)>" -> "<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[],int,int)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.Translate: void <clinit>()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.sort.Sort: int bsearch(org.htmlparser.util.sort.Ordered[],org.htmlparser.util.sort.Ordered)>";
"<org.htmlparser.util.CharacterReferenceEx: void <init>()>" -> "<org.htmlparser.util.CharacterReference: void <init>(java.lang.String,int)>";
"<java.lang.Character: boolean isLetterOrDigit(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Character: boolean isLetter(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Reader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Reader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Writer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Writer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.sort.Sort: int bsearch(org.htmlparser.util.sort.Ordered[],org.htmlparser.util.sort.Ordered)>" -> "<org.htmlparser.util.sort.Sort: int bsearch(org.htmlparser.util.sort.Ordered[],org.htmlparser.util.sort.Ordered,int,int)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReference: void setKernel(java.lang.String)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReferenceEx: void setStart(int)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReferenceEx: void setEnd(int)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.CharacterReferenceEx: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.CharacterReferenceEx: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.CharacterReferenceEx: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReference: int getCharacter()>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReferenceEx: java.lang.String getKernel()>";
"<org.htmlparser.util.sort.Sort: int bsearch(org.htmlparser.util.sort.Ordered[],org.htmlparser.util.sort.Ordered,int,int)>" -> "<org.htmlparser.util.CharacterReferenceEx: int compare(java.lang.Object)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(char)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(char)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void println()>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void println(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void flush()>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(char)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void flush()>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(int)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void print(char)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.PrintWriter: void flush()>";
"<java.io.PrintWriter: void print(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void print(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void println()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void println(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void flush()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.PrintWriter: void print(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: int read()>";
"<java.io.BufferedReader: int read()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: void setLength(int)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: void setLength(int)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: int length()>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<java.lang.StringBuffer: void setLength(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: int read()>";
"<org.htmlparser.util.Translate: void decode(java.io.InputStream,java.io.PrintStream)>" -> "<java.io.BufferedReader: int read()>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: int getCharacter()>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: int getCharacter()>";
"<org.htmlparser.util.Translate: void <clinit>()>" -> "<org.htmlparser.util.CharacterReference: int getCharacter()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<java.lang.String: int length()>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<java.lang.String: char charAt(int)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<java.lang.String: int length()>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<java.lang.String: char charAt(int)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(org.htmlparser.util.CharacterReference)>" -> "<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>";
"<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: java.lang.String decode(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.htmlparser.util.sort.Sort: int bsearch(org.htmlparser.util.sort.Ordered[],org.htmlparser.util.sort.Ordered,int,int)>" -> "<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>";
"<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>" -> "<org.htmlparser.util.CharacterReferenceEx: java.lang.String getKernel()>";
"<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>" -> "<java.lang.String: int compareTo(java.lang.String)>";
"<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.CharacterReferenceEx: int compare(java.lang.Object)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.CharacterReferenceEx: int compare(java.lang.Object)>" -> "<java.lang.String: int length()>";
"<org.htmlparser.util.CharacterReferenceEx: int compare(java.lang.Object)>" -> "<java.lang.String: char charAt(int)>";
"<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[],int,int)>" -> "<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>";
"<org.htmlparser.util.sort.Sort: void QuickSort(org.htmlparser.util.sort.Ordered[],int,int)>" -> "<org.htmlparser.util.CharacterReference: int compare(java.lang.Object)>";
"<org.htmlparser.util.Translate: org.htmlparser.util.CharacterReference lookup(char)>" -> "<org.htmlparser.util.CharacterReference: int getCharacter()>";
"<org.htmlparser.util.Translate: void encode(java.io.InputStream,java.io.PrintStream)>" -> "<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>";
"<org.htmlparser.util.Translate: int lookup(org.htmlparser.util.CharacterReference[],char,int,int)>" -> "<org.htmlparser.util.CharacterReference: int getCharacter()>";
"<org.htmlparser.util.Translate: void main(java.lang.String[])>" -> "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.htmlparser.util.CharacterReferenceEx: int compare(java.lang.Object)>" -> "<java.lang.String: char charAt(int)>";
"<org.htmlparser.util.CharacterReferenceEx: java.lang.String getKernel()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<java.lang.String: java.lang.String substring(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
