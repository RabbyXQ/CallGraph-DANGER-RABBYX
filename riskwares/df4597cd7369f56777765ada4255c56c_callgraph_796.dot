digraph CallGraph {
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.File: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.DataInputStream: void <init>(java.io.InputStream)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.ByteArrayOutputStream: void <init>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.d: void a(java.net.URLConnection,byte[])>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.Thread: void sleep(long)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.Socket: void <init>(java.lang.String,int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.DataOutputStream: void <init>(java.io.OutputStream)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.DataInputStream: void <init>(java.io.InputStream)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.ServerSocket: void <init>(int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: byte[] b(byte[],int,int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: int a(byte[],int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: int a(byte[],int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: int a(byte[],int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: byte[] b(byte[],int,int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: byte[] b(byte[],int,int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: int a(byte[],int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.Payload: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.util.concurrent.TimeUnit: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.Payload: void <clinit>()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<com.metasploit.stage.Payload: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.net.URL: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<com.metasploit.stage.Payload: void <clinit>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.FileOutputStream: void <init>(java.io.File)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<com.metasploit.stage.Payload: byte[] a(java.io.DataInputStream)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.String: void <init>(byte[])>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<com.metasploit.stage.Payload: byte[] a(java.io.DataInputStream)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Integer: java.lang.String toString(int,int)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.util.Random: void <init>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.String: void <clinit>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Integer: void <clinit>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: void <clinit>()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Boolean: void <clinit>()>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.io.DataInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void <init>()>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.ByteArrayOutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.d: void a(java.net.URLConnection,byte[])>" -> "<com.metasploit.stage.d: void <init>(byte[])>";
"<com.metasploit.stage.d: void a(java.net.URLConnection,byte[])>" -> "<java.security.SecureRandom: void <init>()>";
"<com.metasploit.stage.d: void a(java.net.URLConnection,byte[])>" -> "<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>";
"<java.lang.Thread: void sleep(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.Socket: void <init>(java.lang.String,int)>" -> "<java.lang.Object: void <init>()>";
"<java.net.Socket: void <init>(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<java.io.DataOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.ServerSocket: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.net.ServerSocket: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: int parseInt(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.a: byte[] b(byte[],int,int)>" -> "<java.lang.System: void <clinit>()>";
"<com.metasploit.stage.a: byte[] b(byte[],int,int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<java.lang.String: void <clinit>()>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<com.metasploit.stage.a: byte[] b(byte[],int,int)>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<java.lang.String: void <clinit>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] $values()>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: void <clinit>()>" -> "<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" -> "<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>";
"<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.io.FileOutputStream: void finalize()>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.io.OutputStream: void <init>()>";
"<com.metasploit.stage.Payload: byte[] a(java.io.DataInputStream)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: java.lang.String toString(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Random: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.Random: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.d: void <init>(byte[])>" -> "<java.lang.Object: void <init>()>";
"<java.security.SecureRandom: void <init>()>" -> "<java.util.Random: void <init>()>";
"<java.security.SecureRandom: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: void <init>(byte[],java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[],java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>" -> "<java.lang.Enum: void <init>(java.lang.String,int)>";
"<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] $values()>" -> "<java.util.concurrent.TimeUnit: void <clinit>()>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" -> "<java.lang.ClassLoader: void <init>()>";
"<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.Enum: void finalize()>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Enum: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<java.lang.String: java.lang.String trim()>";
"<com.metasploit.stage.a: java.lang.String a(byte[],int,int)>" -> "<java.lang.String: java.lang.String trim()>";
"<java.lang.String: java.lang.String trim()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>";
"<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.FileOutputStream: void write(byte[])>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.OutputStream: void flush()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.FileOutputStream: void close()>";
"<java.io.FileOutputStream: void write(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStream: void flush()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: boolean exists()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: boolean createNewFile()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: boolean delete()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.io.File: boolean delete()>";
"<java.io.File: boolean exists()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: boolean createNewFile()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.File: boolean delete()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.util.Random: int nextInt(int)>";
"<java.util.Random: int nextInt(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Class: java.lang.Object newInstance()>";
"<com.metasploit.stage.Payload: void a(java.io.DataInputStream,java.io.OutputStream,java.lang.Object[])>" -> "<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>";
"<java.lang.Class: java.lang.ClassLoader getClassLoader()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.URL: java.net.URLConnection openConnection()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.URL: java.io.InputStream openStream()>";
"<java.net.URL: java.net.URLConnection openConnection()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: java.io.InputStream openStream()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.Socket: java.io.InputStream getInputStream()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.Socket: java.io.OutputStream getOutputStream()>";
"<java.net.Socket: java.io.InputStream getInputStream()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.Socket: java.io.OutputStream getOutputStream()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: byte[] a(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int readInt()>";
"<com.metasploit.stage.Payload: byte[] a(java.io.DataInputStream)>" -> "<java.io.DataInputStream: int read(byte[],int,int)>";
"<java.io.DataInputStream: int readInt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.DataInputStream: int read(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.ServerSocket: java.net.Socket accept()>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.net.ServerSocket: void close()>";
"<java.net.ServerSocket: java.net.Socket accept()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.ServerSocket: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.util.concurrent.TimeUnit: long toMillis(long)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.util.concurrent.TimeUnit: long toMillis(long)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.util.concurrent.TimeUnit: long toMillis(long)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.util.concurrent.TimeUnit: long toMillis(long)>";
"<java.util.concurrent.TimeUnit: long toMillis(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<java.lang.String: boolean startsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String[] split(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.io.File: java.lang.String getAbsolutePath()>";
"<java.io.File: java.lang.String getAbsolutePath()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<com.metasploit.stage.Payload: void main(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
