digraph CallGraph {
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Vector3: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Rectangle: void <init>(float,float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Rectangle: void <init>(float,float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void <init>(int)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Rectangle: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Intersector: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector2: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector2: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Matrix4: void <clinit>()>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Matrix4: void <init>()>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Vector3: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: void <clinit>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Rectangle: void <init>(float,float,float,float)>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Circle: void <init>(float,float,float)>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector: void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector: void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector: void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector$SplitTriangle: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>" -> "<com.badlogic.gdx.math.Vector3: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Rectangle: void <clinit>()>" -> "<com.badlogic.gdx.math.Rectangle: void <init>()>";
"<com.badlogic.gdx.math.Rectangle: void <clinit>()>" -> "<com.badlogic.gdx.math.Rectangle: void <init>()>";
"<com.badlogic.gdx.math.Vector3: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Vector2: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Vector2: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector2: void <init>(float,float)>";
"<com.badlogic.gdx.math.Vector2: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector2: void <init>(float,float)>";
"<com.badlogic.gdx.math.Vector2: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector2: void <init>(float,float)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Quaternion: void <clinit>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Matrix4: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Quaternion: void <init>()>";
"<com.badlogic.gdx.math.Matrix4: void <clinit>()>" -> "<com.badlogic.gdx.math.Vector3: void <clinit>()>";
"<com.badlogic.gdx.math.Matrix4: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <init>(java.lang.String,int)>";
"<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <init>(java.lang.String,int)>";
"<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <init>(java.lang.String,int)>";
"<com.badlogic.gdx.math.Intersector: void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)>" -> "<com.badlogic.gdx.math.Intersector: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)>" -> "<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Rectangle: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Vector2: void <init>(float,float)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.badlogic.gdx.math.Quaternion: void <clinit>()>" -> "<com.badlogic.gdx.math.Quaternion: void <init>(float,float,float,float)>";
"<com.badlogic.gdx.math.Quaternion: void <clinit>()>" -> "<com.badlogic.gdx.math.Quaternion: void <init>(float,float,float,float)>";
"<com.badlogic.gdx.math.Quaternion: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.badlogic.gdx.math.Plane$PlaneSide: void <init>(java.lang.String,int)>" -> "<java.lang.Enum: void <init>(java.lang.String,int)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Intersector: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Quaternion: void <init>(float,float,float,float)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.Enum: void finalize()>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Enum: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.badlogic.gdx.math.Quaternion: void <init>(float,float,float,float)>" -> "<com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(float,float,float,float)>";
"<com.badlogic.gdx.math.Quaternion: void <init>()>" -> "<com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion idt()>";
"<com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion idt()>" -> "<com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(float,float,float,float)>";
"<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float,float,float)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float,float,float)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float,float,float)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.collision.BoundingBox)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.collision.BoundingBox)>";
"<com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.collision.BoundingBox)>" -> "<com.badlogic.gdx.math.collision.BoundingBox: boolean isValid()>";
"<com.badlogic.gdx.math.collision.BoundingBox: void <init>(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Rectangle: boolean overlaps(com.badlogic.gdx.math.Rectangle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Rectangle: boolean overlaps(com.badlogic.gdx.math.Rectangle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Rectangle: boolean contains(float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean overlaps(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean contains(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean overlaps(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean overlaps(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean overlaps(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean overlaps(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean contains(float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean contains(float,float)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean contains(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void main(java.lang.String[])>" -> "<com.badlogic.gdx.math.Circle: boolean contains(com.badlogic.gdx.math.Circle)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void reset()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void setSide(boolean)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: boolean getSide()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void setSide(boolean)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: boolean getSide()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void setSide(boolean)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: boolean getSide()>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void setSide(boolean)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>";
"<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)>" -> "<java.lang.System: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: void <init>(com.badlogic.gdx.math.Vector3,float)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()>" -> "<java.lang.Math: double sqrt(double)>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()>" -> "<com.badlogic.gdx.math.Vector3: float len2()>";
"<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float)>";
"<com.badlogic.gdx.math.Vector3: void <init>(float,float,float)>" -> "<com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>";
"<com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)>" -> "<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 getNormal()>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 getNormal()>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane: float getD()>";
"<com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)>" -> "<com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector3)>";
"<com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)>" -> "<com.badlogic.gdx.math.Vector3: float dot(float,float,float)>";
}
