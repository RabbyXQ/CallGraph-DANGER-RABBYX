digraph CallGraph {
"<com.beauty.common.utils.KSHttpClient: void main(java.lang.String[])>" -> "<java.util.HashMap: void <init>()>";
"<com.beauty.common.utils.KSHttpClient: void main(java.lang.String[])>" -> "<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: void <init>()>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.util.ArrayList: void <init>()>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>" -> "<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<java.util.ArrayList: void <init>()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.params.BasicHttpParams: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.client.HttpClient getHttpClient()>" -> "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<java.util.ArrayList: java.util.Iterator iterator()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.lang.String: int length()>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.lang.String: java.lang.String trim()>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<java.lang.String: java.lang.String trim()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: org.apache.http.HttpEntity getHttpEntityFromPost(java.lang.String,java.util.List)>" -> "<java.lang.Throwable: void printStackTrace()>";
"<java.lang.Throwable: void printStackTrace()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.beauty.common.utils.KSHttpClient: void main(java.lang.String[])>" -> "<java.lang.Throwable: void printStackTrace()>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.util.HashMap: int size()>";
"<com.beauty.common.utils.KSHttpClient: java.io.InputStream getStreamFromPost(java.lang.String,java.util.Map)>" -> "<java.util.HashMap: java.util.Set entrySet()>";
"<java.util.HashMap: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: java.util.Set entrySet()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
}
