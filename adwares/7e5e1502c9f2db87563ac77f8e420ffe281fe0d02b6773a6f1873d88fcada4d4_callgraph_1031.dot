digraph CallGraph {
"<Test: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<Test: void main(java.lang.String[])>" -> "<com.dd.plist.PropertyListParser: void convertToXml(java.io.File,java.io.File)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.System: long currentTimeMillis()>";
"<Test: void main(java.lang.String[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<Test: void main(java.lang.String[])>" -> "<java.io.File: void <init>(java.lang.String)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<Test: void main(java.lang.String[])>" -> "<java.awt.FileDialog: void <init>(java.awt.Frame)>";
"<Test: void main(java.lang.String[])>" -> "<javax.swing.JFrame: void <init>()>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<Test: void main(java.lang.String[])>" -> "<java.io.File: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.System: void exit(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: void convertToXml(java.io.File,java.io.File)>" -> "<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>";
"<com.dd.plist.PropertyListParser: void convertToXml(java.io.File,java.io.File)>" -> "<com.dd.plist.PropertyListParser: void saveAsXML(com.dd.plist.NSObject,java.io.File)>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.io.File: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.String: void <init>(byte[],int,int)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.PropertyListParser: byte[] readAll(java.io.InputStream,int)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.io.FileInputStream: void <init>(java.io.File)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.PropertyListParser: void saveAsXML(com.dd.plist.NSObject,java.io.File)>" -> "<java.io.FileOutputStream: void <init>(java.io.File)>";
"<com.dd.plist.PropertyListParser: void saveAsXML(com.dd.plist.NSObject,java.io.File)>" -> "<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.util.Scanner: void <init>(java.io.File)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.XMLPropertyListParser: javax.xml.parsers.DocumentBuilder getDocBuilder()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.InputStream)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.io.FileInputStream: void <init>(java.io.File)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.StringBuilder: void <init>()>";
"<java.lang.String: void <init>(byte[],int,int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: byte[] readAll(java.io.InputStream,int)>" -> "<java.io.ByteArrayOutputStream: void <init>()>";
"<java.io.FileInputStream: void <init>(java.io.File)>" -> "<java.io.FileInputStream: void finalize()>";
"<java.io.FileInputStream: void <init>(java.io.File)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void <init>(java.io.File)>" -> "<java.io.InputStream: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.io.FileOutputStream: void finalize()>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void <init>(java.io.File)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>" -> "<java.io.Writer: void <init>()>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>()>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.text.ParseException: void <init>(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>";
"<java.util.Scanner: void <init>(java.io.File)>" -> "<java.lang.Object: void <init>()>";
"<java.util.Scanner: void <init>(java.io.File)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<com.dd.plist.XMLPropertyListParser: java.util.List filterElementNodes(org.w3c.dom.NodeList)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: javax.xml.parsers.DocumentBuilder getDocBuilder()>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: javax.xml.parsers.DocumentBuilder getDocBuilder()>" -> "<com.dd.plist.XMLPropertyListParser$1: void <init>()>";
"<com.dd.plist.XMLPropertyListParser: javax.xml.parsers.DocumentBuilder getDocBuilder()>" -> "<com.dd.plist.XMLPropertyListParser: void initDocBuilderFactory()>";
"<java.lang.Runtime: java.lang.Runtime getRuntime()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.InputStream)>" -> "<com.dd.plist.PropertyListParser: byte[] readAll(java.io.InputStream,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.InputStream)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(byte[])>";
"<java.lang.Exception: void <init>(java.lang.String)>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void <init>()>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.ByteArrayOutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileInputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.FileOutputStream: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Writer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Writer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.ParseException: void <init>(java.lang.String,int)>" -> "<java.lang.Exception: void <init>()>";
"<java.text.ParseException: void <init>(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.text.ParseException: void <init>(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSString: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSString: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSData: void <init>(byte[])>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Integer: int parseInt(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSNumber: void <init>(double)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Double: double parseDouble(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSNumber: void <init>(int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSNumber: void <init>(boolean)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSNumber: void <init>(boolean)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSNumber: void <init>(double)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Double: double parseDouble(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSNumber: void <init>(int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSDate: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSDate: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.text.ParseException: void <init>(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.text.ParseException: void <init>(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSDictionary: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSArray: void <init>(com.dd.plist.NSObject[])>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.text.ParseException: void <init>(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.LinkedList: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Double: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.Double: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSDate: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSData: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSString: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSString: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSNumber: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSNumber: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSNumber: void <init>(boolean)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSNumber: void <init>(boolean)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSArray: void <init>(int)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.XMLPropertyListParser: java.util.List filterElementNodes(org.w3c.dom.NodeList)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.XMLPropertyListParser: java.util.List filterElementNodes(org.w3c.dom.NodeList)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSDictionary: void <init>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: java.util.List filterElementNodes(org.w3c.dom.NodeList)>" -> "<java.util.ArrayList: void <init>(int)>";
"<com.dd.plist.XMLPropertyListParser$1: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.dd.plist.XMLPropertyListParser: void initDocBuilderFactory()>" -> "<com.dd.plist.XMLPropertyListParser: void <clinit>()>";
"<com.dd.plist.XMLPropertyListParser: void initDocBuilderFactory()>" -> "<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: void <init>()>";
"<com.dd.plist.NSString: void <init>(java.lang.String)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.NSString: void <init>(java.lang.String)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.NSString: void <init>(java.lang.String)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.Byte: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.Byte: java.lang.Byte valueOf(byte)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.Byte: java.lang.Byte valueOf(byte)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.Byte: java.lang.Byte valueOf(byte)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.text.StringCharacterIterator: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.util.LinkedList: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.Byte: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<com.dd.plist.ASCIIPropertyListParser: void <clinit>()>";
"<com.dd.plist.NSData: void <init>(byte[])>" -> "<com.dd.plist.NSObject: void <init>()>";
"<java.lang.Integer: int parseInt(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(double)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<java.lang.Double: double parseDouble(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(int)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<java.lang.Integer: int parseInt(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(boolean)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSDate: void <init>(java.lang.String)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.NSDate: void <init>(java.lang.String)>" -> "<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>";
"<com.dd.plist.NSDate: void <init>(java.lang.String)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSDate: void <init>(java.lang.String)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDictionary: void <init>()>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSDictionary: void <init>()>" -> "<java.util.LinkedHashMap: void <init>()>";
"<com.dd.plist.NSArray: void <init>(com.dd.plist.NSObject[])>" -> "<com.dd.plist.NSObject: void <init>()>";
"<java.util.LinkedList: void <init>()>" -> "<java.util.AbstractSequentialList: void <init>()>";
"<java.util.LinkedList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSObject: void <clinit>()>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.NSObject: void <clinit>()>" -> "<java.lang.System: java.lang.String getProperty(java.lang.String)>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<java.text.SimpleDateFormat: void <init>(java.lang.String)>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<java.text.SimpleDateFormat: void <init>(java.lang.String)>";
"<com.dd.plist.NSData: void <init>(java.lang.String)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.NSData: void <init>(java.lang.String)>" -> "<com.dd.plist.Base64: byte[] decode(java.lang.String)>";
"<com.dd.plist.NSData: void <init>(java.lang.String)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.Long: void <clinit>()>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.Boolean: boolean parseBoolean(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.Double: double parseDouble(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.Long: long parseLong(java.lang.String)>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.Boolean: void <clinit>()>";
"<com.dd.plist.NSNumber: void <init>(java.lang.String)>" -> "<java.lang.Double: void <clinit>()>";
"<com.dd.plist.NSArray: void <init>(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSArray: void <init>(int)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<java.util.ArrayList: void <init>(int)>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[],java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[],java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSObject: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Byte: java.lang.Byte valueOf(byte)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.Integer: int parseInt(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.Integer: int parseInt(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.Integer: int parseInt(java.lang.String,int)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.Integer: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.String: void <clinit>()>";
"<java.text.StringCharacterIterator: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.text.StringCharacterIterator: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<java.util.LinkedHashMap: void <init>()>" -> "<java.util.HashMap: void <init>()>";
"<java.util.LinkedHashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractSequentialList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.AbstractSequentialList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.System: java.lang.String getProperty(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.SimpleDateFormat: void <init>(java.lang.String)>" -> "<java.text.DateFormat: void <init>()>";
"<java.text.SimpleDateFormat: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String)>" -> "<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Boolean: boolean parseBoolean(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Long: long parseLong(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: void <init>()>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.DateFormat: void <init>()>" -> "<java.text.Format: void <init>()>";
"<java.text.DateFormat: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayInputStream: void <init>(byte[])>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayOutputStream: void <init>()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.Format: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.text.Format: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>" -> "<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayInputStream: void <init>(byte[])>" -> "<java.io.InputStream: void <init>()>";
"<java.io.ByteArrayInputStream: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<com.dd.plist.Base64: byte[] getDecodabet(int)>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<java.lang.System: void <clinit>()>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<com.dd.plist.Base64: byte[] getDecodabet(int)>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.Base64: byte[] getDecodabet(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] getDecodabet(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] getDecodabet(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.Base64: int decode4to3(byte[],int,byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(byte[],int,int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.FilterInputStream: int read(byte[])>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.util.zip.GZIPInputStream: void close()>";
"<java.io.FilterInputStream: int read(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.GZIPInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayInputStream: void close()>";
"<java.io.ByteArrayInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayOutputStream: void close()>";
"<java.io.ByteArrayOutputStream: void write(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: byte[] toByteArray()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayOutputStream: void close()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayOutputStream: void close()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.util.zip.GZIPInputStream: void close()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.util.zip.GZIPInputStream: void close()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayInputStream: void close()>";
"<com.dd.plist.Base64: byte[] decode(java.lang.String,int)>" -> "<java.io.ByteArrayInputStream: void close()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>";
"<com.dd.plist.NSDate: void <clinit>()>" -> "<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>";
"<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>" -> "<java.text.DateFormat: java.util.Date parse(java.lang.String)>";
"<com.dd.plist.NSDate: java.util.Date parseDateString(java.lang.String)>" -> "<java.text.DateFormat: java.util.Date parse(java.lang.String)>";
"<java.text.DateFormat: java.util.Date parse(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.text.StringCharacterIterator: char current()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.text.StringCharacterIterator: int getIndex()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.text.StringCharacterIterator: int getEndIndex()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.text.StringCharacterIterator: char next()>";
"<java.text.StringCharacterIterator: char current()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.StringCharacterIterator: int getIndex()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.StringCharacterIterator: int getEndIndex()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.text.StringCharacterIterator: char next()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseEscapedSequence(java.text.StringCharacterIterator)>" -> "<java.text.StringCharacterIterator: char next()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.util.LinkedList: boolean add(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.util.LinkedList: boolean add(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.util.LinkedList: boolean add(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.util.LinkedList: int size()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.util.LinkedList: java.lang.Object get(int)>";
"<java.util.LinkedList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.String: int length()>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.dd.plist.ASCIIPropertyListParser: java.lang.String parseQuotedString(java.lang.String)>" -> "<java.lang.String: byte[] getBytes(java.lang.String)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String substring(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: byte[] getBytes(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: int length()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: int length()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: int length()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: int length()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSString: void <init>(java.lang.String)>" -> "<java.lang.String: byte[] getBytes(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<java.lang.String: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSDictionary: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSSet: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSArray: void <init>(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.UID: void <init>(java.lang.String,byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.String: java.lang.String valueOf(int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSString: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSString: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSData: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseUnsignedInt(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSDate: void <init>(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSNumber: void <init>(byte[],int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Exception: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSNumber: void <init>(byte[],int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Runtime: java.lang.Runtime getRuntime()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Math: double pow(double,double)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSNumber: void <init>(boolean)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSNumber: void <init>(boolean)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.System: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.math.BigInteger: void <init>(byte[])>" -> "<java.lang.Number: void <init>()>";
"<java.math.BigInteger: void <init>(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSSet: void <init>()>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSSet: void <init>()>" -> "<java.util.LinkedHashSet: void <init>()>";
"<com.dd.plist.UID: void <init>(java.lang.String,byte[])>" -> "<com.dd.plist.NSObject: void <init>()>";
"<java.lang.String: java.lang.String valueOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSString: void <init>(byte[],java.lang.String)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.NSString: void <init>(byte[],java.lang.String)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.NSString: void <init>(byte[],java.lang.String)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSDate: void <init>(byte[])>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSDate: void <init>(byte[])>" -> "<java.util.Date: void <init>(long)>";
"<com.dd.plist.NSDate: void <init>(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>";
"<com.dd.plist.NSNumber: void <init>(byte[],int)>" -> "<com.dd.plist.NSObject: void <init>()>";
"<com.dd.plist.NSNumber: void <init>(byte[],int)>" -> "<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>";
"<com.dd.plist.NSNumber: void <init>(byte[],int)>" -> "<com.dd.plist.BinaryPropertyListParser: long parseLong(byte[])>";
"<com.dd.plist.NSNumber: void <init>(byte[],int)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.lang.Number: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Number: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedHashSet: void <init>()>" -> "<java.util.HashSet: void <init>()>";
"<java.util.LinkedHashSet: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Date: void <init>(long)>" -> "<java.lang.Object: void <init>()>";
"<java.util.Date: void <init>(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.Double: void <clinit>()>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.StringBuilder: void <init>()>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.Float: float intBitsToFloat(int)>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseLong(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.Double: double longBitsToDouble(long)>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<com.dd.plist.BinaryPropertyListParser: long parseLong(byte[])>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.Float: void <clinit>()>";
"<java.util.HashSet: void <init>()>" -> "<java.util.AbstractSet: void <init>()>";
"<java.util.HashSet: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractSet: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractSet: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSNumber: java.lang.String toString()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSDate: java.lang.String toString()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.Object: java.lang.String toString()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSString: java.lang.String toString()>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.String: java.lang.String valueOf(boolean)>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.String: java.lang.String valueOf(double)>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.String: java.lang.String valueOf(long)>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.Object: java.lang.String toString()>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<java.lang.String: void <clinit>()>";
"<java.lang.Object: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String valueOf(boolean)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String valueOf(double)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String valueOf(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<com.dd.plist.NSNumber: long longValue()>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<com.dd.plist.NSNumber: double doubleValue()>";
"<com.dd.plist.NSNumber: java.lang.String toString()>" -> "<com.dd.plist.NSNumber: boolean boolValue()>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.dd.plist.BinaryPropertyListParser: double parseDouble(byte[])>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: byte[] copyOfRange(byte[],int,int)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSDictionary: void put(java.lang.String,com.dd.plist.NSObject)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSSet: void addObject(com.dd.plist.NSObject)>";
"<com.dd.plist.NSSet: void addObject(com.dd.plist.NSObject)>" -> "<java.util.HashSet: boolean add(java.lang.Object)>";
"<java.util.HashSet: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<com.dd.plist.NSArray: void setValue(int,com.dd.plist.NSObject)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: int intValue()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: int intValue()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: int intValue()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: int intValue()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: int intValue()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.math.BigInteger: int intValue()>";
"<java.math.BigInteger: int intValue()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parseObject(int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject doParse(byte[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<com.dd.plist.XMLPropertyListParser: java.util.List filterElementNodes(org.w3c.dom.NodeList)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<java.util.ArrayList: int size()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseDocument(org.w3c.dom.Document)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<java.util.ArrayList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.util.ArrayList: int size()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.util.ArrayList: int size()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.util.ArrayList: int size()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSArray: void setValue(int,com.dd.plist.NSObject)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.dd.plist.XMLPropertyListParser: com.dd.plist.NSObject parseObject(org.w3c.dom.Node)>" -> "<com.dd.plist.NSDictionary: void put(java.lang.String,com.dd.plist.NSObject)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<com.dd.plist.NSDictionary: void put(java.lang.String,com.dd.plist.NSObject)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.LinkedList: boolean add(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>";
"<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: byte[] readAll(java.io.InputStream,int)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.dd.plist.PropertyListParser: byte[] readAll(java.io.InputStream,int)>" -> "<java.io.ByteArrayOutputStream: void write(int)>";
"<java.io.ByteArrayOutputStream: void write(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.InputStream)>" -> "<java.io.FileInputStream: void close()>";
"<java.io.FileInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.util.Scanner: java.util.Scanner useDelimiter(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parse(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<java.util.Scanner: java.util.Scanner useDelimiter(java.util.regex.Pattern)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Scanner: java.lang.String next()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNextInt()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: int nextInt()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: boolean hasNext(java.util.regex.Pattern)>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<com.dd.plist.ASCIIPropertyListParser: com.dd.plist.NSObject parseObject(java.util.Scanner)>" -> "<java.util.Scanner: java.lang.String next()>";
"<java.util.Scanner: java.lang.String next(java.util.regex.Pattern)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Scanner: boolean hasNextInt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Scanner: int nextInt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: void saveAsXML(com.dd.plist.NSObject,java.io.File)>" -> "<java.io.Writer: void write(java.lang.String)>";
"<com.dd.plist.PropertyListParser: void saveAsXML(com.dd.plist.NSObject,java.io.File)>" -> "<java.io.OutputStreamWriter: void close()>";
"<java.io.Writer: void write(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStreamWriter: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<java.lang.String: boolean startsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.io.FileInputStream: void close()>";
"<com.dd.plist.PropertyListParser: byte[] readAll(java.io.InputStream,int)>" -> "<java.io.FileInputStream: int read()>";
"<java.io.FileInputStream: int read()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.PropertyListParser: void saveAsXML(com.dd.plist.NSObject,java.io.File)>" -> "<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: java.lang.String toXMLPropertyList()>" -> "<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSDate: java.lang.String makeDateString(java.util.Date)>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDate: java.lang.String makeDateString(java.util.Date)>" -> "<com.dd.plist.NSDate: void <clinit>()>";
"<com.dd.plist.NSDate: java.lang.String makeDateString(java.util.Date)>" -> "<com.dd.plist.NSObject: void <clinit>()>";
"<com.dd.plist.NSDate: java.lang.String makeDateString(java.util.Date)>" -> "<java.text.DateFormat: java.lang.String format(java.util.Date)>";
"<java.text.DateFormat: java.lang.String format(java.util.Date)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>" -> "<java.util.HashSet: java.util.Iterator iterator()>";
"<java.util.HashSet: java.util.Iterator iterator()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: boolean contains(java.lang.CharSequence)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: boolean contains(java.lang.CharSequence)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: boolean contains(java.lang.CharSequence)>";
"<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
"<java.lang.String: boolean contains(java.lang.CharSequence)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSData: java.lang.String getBase64EncodedData()>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSData: java.lang.String getBase64EncodedData()>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.NSData: java.lang.String getBase64EncodedData()>" -> "<com.dd.plist.Base64: java.lang.String encodeBytes(byte[])>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[])>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[])>" -> "<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <init>(byte[],int,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <init>(byte[],int,int,java.lang.String)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <init>(byte[])>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <init>(byte[],java.lang.String)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64$Base64OutputStream: void <init>(java.io.OutputStream,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.io.ByteArrayOutputStream: void <init>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <clinit>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.String: void <clinit>()>";
"<java.lang.String: void <init>(byte[],int,int,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.String: void <init>(byte[],int,int,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>" -> "<com.dd.plist.Base64: byte[] getAlphabet(int)>";
"<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>" -> "<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>";
"<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64$Base64OutputStream: void <init>(java.io.OutputStream,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64$Base64OutputStream: void <init>(java.io.OutputStream,int)>" -> "<com.dd.plist.Base64: byte[] access$100(int)>";
"<com.dd.plist.Base64$Base64OutputStream: void <init>(java.io.OutputStream,int)>" -> "<com.dd.plist.Base64: byte[] access$000(int)>";
"<com.dd.plist.Base64$Base64OutputStream: void <init>(java.io.OutputStream,int)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<com.dd.plist.Base64: byte[] getAlphabet(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] getAlphabet(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] getAlphabet(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>";
"<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] access$100(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] access$100(int)>" -> "<com.dd.plist.Base64: byte[] getDecodabet(int)>";
"<com.dd.plist.Base64: byte[] access$000(int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] access$000(int)>" -> "<com.dd.plist.Base64: byte[] getAlphabet(int)>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.util.zip.DeflaterOutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.util.zip.DeflaterOutputStream: void close()>";
"<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.DeflaterOutputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64$Base64OutputStream: void close()>";
"<com.dd.plist.Base64$Base64OutputStream: void close()>" -> "<java.io.FilterOutputStream: void close()>";
"<java.io.FilterOutputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64$Base64OutputStream: void close()>" -> "<com.dd.plist.Base64$Base64OutputStream: void flushBase64()>";
"<com.dd.plist.Base64$Base64OutputStream: void flushBase64()>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64$Base64OutputStream: void flushBase64()>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64$Base64OutputStream: void flushBase64()>" -> "<com.dd.plist.Base64: byte[] access$400(byte[],byte[],int,int)>";
"<java.io.IOException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.io.IOException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.Base64: byte[] access$400(byte[],byte[],int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] access$400(byte[],byte[],int,int)>" -> "<com.dd.plist.Base64: byte[] encode3to4(byte[],byte[],int,int)>";
"<com.dd.plist.Base64: byte[] encode3to4(byte[],byte[],int,int)>" -> "<com.dd.plist.Base64: void <clinit>()>";
"<com.dd.plist.Base64: byte[] encode3to4(byte[],byte[],int,int)>" -> "<com.dd.plist.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.io.ByteArrayOutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64$Base64OutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<com.dd.plist.Base64$Base64OutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.util.zip.DeflaterOutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.util.zip.DeflaterOutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.io.ByteArrayOutputStream: void close()>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.io.ByteArrayOutputStream: void close()>";
"<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.String: java.lang.String[] split(java.lang.String)>";
"<java.lang.String: java.lang.String[] split(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(double)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSNumber: long longValue()>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSNumber: double doubleValue()>";
"<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSNumber: boolean boolValue()>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSDictionary: com.dd.plist.NSObject objectForKey(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSDictionary: com.dd.plist.NSObject objectForKey(java.lang.String)>" -> "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>";
"<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>" -> "<java.util.LinkedHashMap: java.util.Set keySet()>";
"<java.util.LinkedHashMap: java.util.Set keySet()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSObject: void indent(java.lang.StringBuilder,int)>";
"<com.dd.plist.Base64: java.lang.String encodeBytes(byte[],int,int,int)>" -> "<java.lang.Throwable: void printStackTrace()>";
"<java.lang.Throwable: void printStackTrace()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.io.File: long length()>";
"<com.dd.plist.BinaryPropertyListParser: com.dd.plist.NSObject parse(java.io.File)>" -> "<java.io.File: long length()>";
"<java.io.File: long length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<Test: void main(java.lang.String[])>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.dd.plist.NSDictionary: void put(java.lang.String,com.dd.plist.NSObject)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSDate: java.lang.String toString()>" -> "<java.util.Date: java.lang.String toString()>";
"<java.util.Date: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSDictionary: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSNumber: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSString: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSData: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSDate: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.UID: void toXML(java.lang.StringBuilder,int)>";
"<com.dd.plist.NSArray: void toXML(java.lang.StringBuilder,int)>" -> "<com.dd.plist.NSSet: void toXML(java.lang.StringBuilder,int)>";
}
