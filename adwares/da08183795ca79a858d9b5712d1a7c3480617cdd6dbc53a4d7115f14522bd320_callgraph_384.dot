digraph CallGraph {
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<com.external.stomp.Server: void <init>(int)>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.System: void exit(int)>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void <init>(int)>" -> "<com.external.stomp.Server: void <init>(int,com.external.stomp.Authenticator)>";
"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.System: void exit(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void <init>(int,com.external.stomp.Authenticator)>" -> "<com.external.stomp.Server: void <init>()>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.external.stomp.Server: void <init>()>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server: void <init>()>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server: void <init>()>" -> "<com.external.stomp.FileQueue: void <init>()>";
"<com.external.stomp.Server: void <init>()>" -> "<com.external.stomp.AllowAllAuthenticator: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.FileQueue: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<com.external.stomp.AllowAllAuthenticator: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void main(java.lang.String[])>" -> "<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>";
"<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void <init>(int,com.external.stomp.Authenticator)>" -> "<com.external.stomp.Server: void listen(int)>";
"<com.external.stomp.Server: void listen(int)>" -> "<com.external.stomp.Server$ConnectionListener: void <init>(com.external.stomp.Server,int,com.external.stomp.Server)>";
"<com.external.stomp.Server$ConnectionListener: void <init>(com.external.stomp.Server,int,com.external.stomp.Server)>" -> "<java.lang.Thread: void <init>()>";
"<com.external.stomp.Server$ConnectionListener: void <init>(com.external.stomp.Server,int,com.external.stomp.Server)>" -> "<java.util.ArrayList: void <init>()>";
"<java.lang.Thread: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void listen(int)>" -> "<com.external.stomp.Server$ConnectionListener: void run()>";
"<com.external.stomp.Server: void listen(int)>" -> "<java.lang.Thread: void start()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.Thread: void yield()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<com.external.stomp.Server$SocketHandler: void <init>(com.external.stomp.Server,java.net.Socket,com.external.stomp.Server)>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.net.ServerSocket: void <init>(int)>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.System: void <clinit>()>";
"<java.lang.Thread: void start()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void <init>(com.external.stomp.Server,java.net.Socket,com.external.stomp.Server)>" -> "<com.external.stomp.Receiver: void <init>()>";
"<java.net.ServerSocket: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.net.ServerSocket: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void <init>()>" -> "<java.lang.Thread: void <init>()>";
"<com.external.stomp.Server$SocketHandler: void <init>(com.external.stomp.Server,java.net.Socket,com.external.stomp.Server)>" -> "<com.external.stomp.Receiver: void setup(com.external.stomp.MessageReceiver,java.io.InputStream)>";
"<com.external.stomp.Receiver: void setup(com.external.stomp.MessageReceiver,java.io.InputStream)>" -> "<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>";
"<com.external.stomp.Receiver: void setup(com.external.stomp.MessageReceiver,java.io.InputStream)>" -> "<java.io.BufferedReader: void <init>(java.io.Reader)>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>" -> "<java.io.Reader: void <init>()>";
"<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedReader: void <init>(java.io.Reader)>" -> "<java.io.Reader: void <init>()>";
"<java.io.BufferedReader: void <init>(java.io.Reader)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Reader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Reader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<com.external.stomp.Receiver: void run()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.Thread: void start()>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.Thread: void sleep(long)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.String: java.lang.String valueOf(java.lang.Object)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.StringBuffer: void <init>()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.System: void <clinit>()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.String: void <clinit>()>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<com.external.stomp.Command: void <clinit>()>" -> "<com.external.stomp.Command: void <init>(java.lang.String)>";
"<java.lang.Thread: void sleep(long)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String valueOf(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<java.lang.Error: void <init>(java.lang.String)>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Command: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Error: void <init>(java.lang.String)>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Error: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.external.stomp.Command: com.external.stomp.Command valueOf(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.Throwable: java.lang.String getMessage()>";
"<java.lang.Throwable: java.lang.String getMessage()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>";
"<java.lang.StringBuffer: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.Thread: boolean isInterrupted()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.Thread: void interrupt()>";
"<java.lang.Thread: void interrupt()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Server$SocketHandler: boolean isClosed()>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Server$SocketHandler: void disconnect()>";
"<com.external.stomp.Receiver: void run()>" -> "<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.Thread: void yield()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.String: java.lang.String valueOf(int)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server: com.external.stomp.Authenticator access$0(com.external.stomp.Server)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.String: void <clinit>()>";
"<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>";
"<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.Thread: void yield()>";
"<java.lang.String: java.lang.String valueOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
"<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.lang.String: byte[] getBytes(java.lang.String)>";
"<java.lang.String: byte[] getBytes(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.util.HashMap: java.util.Set keySet()>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<java.util.HashMap: java.util.Set keySet()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: java.lang.Object get(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Transmitter: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String,java.io.OutputStream)>" -> "<com.external.stomp.Command: java.lang.String toString()>";
"<com.external.stomp.Server$SocketHandler: void disconnect()>" -> "<com.external.stomp.Server$SocketHandler: void close()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.Object: int hashCode()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.Thread: void interrupt()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void close()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void error(java.util.Map,java.lang.String)>";
"<java.lang.Object: int hashCode()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void error(java.util.Map,java.lang.String)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Server$SocketHandler: void error(java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.Thread: void interrupt()>";
"<com.external.stomp.Server$SocketHandler: void transmit(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server$SocketHandler: void close()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.io.BufferedReader: boolean ready()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.io.BufferedReader: java.lang.String readLine()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.io.BufferedReader: int read()>";
"<com.external.stomp.Receiver: void run()>" -> "<java.io.BufferedReader: int read()>";
"<java.io.BufferedReader: boolean ready()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedReader: java.lang.String readLine()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.BufferedReader: int read()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.net.ServerSocket: java.net.Socket accept()>";
"<java.net.ServerSocket: java.net.Socket accept()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.lang.Thread: boolean isInterrupted()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<com.external.stomp.Server$ConnectionListener: void run()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<java.util.ArrayList: java.util.Iterator iterator()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Receiver: void run()>" -> "<java.lang.Throwable: java.lang.String getMessage()>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server: void disconnect(com.external.stomp.Server$SocketHandler)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: void <init>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: void <init>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.lang.StringBuilder: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: void <init>(java.util.Collection)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Message: void <init>(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: void <init>()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: void <init>(java.util.Collection)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.lang.Math: double random()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Command: void <clinit>()>";
"<java.util.ArrayList: void <init>(java.util.Collection)>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>(java.util.Collection)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Message: void <init>(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Math: double random()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: boolean contains(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: boolean remove(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.ArrayList: boolean remove(java.lang.Object)>";
"<java.util.ArrayList: boolean contains(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: boolean remove(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Server$SocketHandler: java.lang.Object token()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Server$SocketHandler: void error(java.util.Map,java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Server$SocketHandler: java.lang.Object token()>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Server$SocketHandler: void error(java.util.Map,java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.AllowAllAuthenticator: boolean authorizeSend(java.lang.Object,java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<com.external.stomp.AllowAllAuthenticator: boolean authorizeSubscribe(java.lang.Object,java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object remove(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object remove(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.util.Collection values()>";
"<java.util.HashMap: java.lang.Object remove(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: java.util.Collection values()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<com.external.stomp.Server: void receive(com.external.stomp.Command,java.util.Map,java.lang.String,com.external.stomp.Authenticatable)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<com.external.stomp.Server: void disconnect(com.external.stomp.Server$SocketHandler)>" -> "<com.external.stomp.Server$ConnectionListener: void disconnect(com.external.stomp.Server$SocketHandler)>";
"<com.external.stomp.Server$ConnectionListener: void disconnect(com.external.stomp.Server$SocketHandler)>" -> "<java.util.ArrayList: boolean remove(java.lang.Object)>";
"<com.external.stomp.Server$SocketHandler: void receive(com.external.stomp.Command,java.util.Map,java.lang.String)>" -> "<com.external.stomp.AllowAllAuthenticator: java.lang.Object connect(java.lang.String,java.lang.String)>";
}
