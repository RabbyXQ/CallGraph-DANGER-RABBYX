digraph CallGraph {
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<java.lang.Integer: void <clinit>()>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>";
"<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.ClassLoader: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.Exception: void <init>()>";
"<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>" -> "<java.lang.System: void <clinit>()>";
"<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>" -> "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
"<org.jsoup.examples.ListLinks: void print(java.lang.String,java.lang.Object[])>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>" -> "<java.lang.StringBuilder: void <init>()>";
"<java.lang.Integer: java.lang.Integer valueOf(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.Jsoup: org.jsoup.Connection connect(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.lang.String)>";
"<org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void <init>()>" -> "<java.lang.Object: void finalize()>";
"<java.lang.Object: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.Throwable: void <init>()>";
"<java.lang.Exception: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuilder: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection: void <init>()>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Object: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.lang.Throwable: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.helper.HttpConnection: void <init>()>" -> "<org.jsoup.helper.HttpConnection$Response: void <init>()>";
"<org.jsoup.helper.HttpConnection: void <init>()>" -> "<org.jsoup.helper.HttpConnection$Request: void <init>(org.jsoup.helper.HttpConnection$1)>";
"<java.lang.RuntimeException: void <init>()>" -> "<java.lang.Exception: void <init>()>";
"<java.lang.RuntimeException: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void <init>()>" -> "<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>";
"<org.jsoup.helper.HttpConnection$Request: void <init>(org.jsoup.helper.HttpConnection$1)>" -> "<org.jsoup.helper.HttpConnection$Request: void <init>()>";
"<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>" -> "<org.jsoup.helper.HttpConnection$Base: void <init>()>";
"<org.jsoup.helper.HttpConnection$Request: void <init>()>" -> "<org.jsoup.Connection$Method: void <clinit>()>";
"<org.jsoup.helper.HttpConnection$Request: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<org.jsoup.helper.HttpConnection$Request: void <init>()>" -> "<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>";
"<org.jsoup.helper.HttpConnection$Base: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.helper.HttpConnection$Base: void <init>()>" -> "<java.util.LinkedHashMap: void <init>()>";
"<org.jsoup.helper.HttpConnection$Base: void <init>()>" -> "<java.util.LinkedHashMap: void <init>()>";
"<org.jsoup.Connection$Method: void <clinit>()>" -> "<org.jsoup.Connection$Method: void <init>(java.lang.String,int)>";
"<org.jsoup.Connection$Method: void <clinit>()>" -> "<org.jsoup.Connection$Method: void <init>(java.lang.String,int)>";
"<java.util.ArrayList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedHashMap: void <init>()>" -> "<java.util.HashMap: void <init>()>";
"<java.util.LinkedHashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.Connection$Method: void <init>(java.lang.String,int)>" -> "<java.lang.Enum: void <init>(java.lang.String,int)>";
"<java.util.AbstractList: void <init>()>" -> "<java.util.AbstractCollection: void <init>()>";
"<java.util.AbstractList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: void <init>()>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.Enum: void finalize()>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Enum: void <init>(java.lang.String,int)>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractCollection: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.util.AbstractMap: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Enum: void finalize()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection connect(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.net.URL: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuilder: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.helper.HttpConnection: org.jsoup.nodes.Document get()>";
"<org.jsoup.helper.HttpConnection: org.jsoup.nodes.Document get()>" -> "<org.jsoup.Connection$Method: void <clinit>()>";
"<org.jsoup.helper.HttpConnection: org.jsoup.nodes.Document get()>" -> "<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response execute()>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection$Response execute()>" -> "<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.Connection$Method: void <clinit>()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.io.BufferedInputStream: void <init>(java.io.InputStream)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.io.BufferedInputStream: void <init>(java.io.InputStream)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.net.URL: void <init>(java.net.URL,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.DataUtil: void <clinit>()>";
"<java.io.BufferedInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.io.BufferedInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>" -> "<org.jsoup.helper.DataUtil: void <clinit>()>";
"<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>" -> "<java.io.ByteArrayOutputStream: void <init>(int)>";
"<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>" -> "<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>";
"<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>" -> "<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.IOException: void <init>(java.lang.String)>" -> "<java.lang.Exception: void <init>()>";
"<java.io.IOException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: void <init>(java.net.URL,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<java.net.URL: void <init>(java.net.URL,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.Connection$Method: void <clinit>()>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
"<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.Connection$Method: void <clinit>()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jsoup.helper.DataUtil: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.InputStream: void <init>()>";
"<java.io.FilterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void <init>(int)>" -> "<java.io.OutputStream: void <init>()>";
"<java.io.ByteArrayOutputStream: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.io.FilterInputStream: void <init>(java.io.InputStream)>";
"<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)>" -> "<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>" -> "<java.io.Writer: void <init>()>";
"<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: void <init>()>";
"<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.InputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.OutputStream: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.Validate: void notNull(java.lang.Object)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Writer: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<java.io.Writer: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URL: java.lang.String getProtocol()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URL: java.lang.String getAuthority()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URL: java.lang.String getPath()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URL: java.lang.String getQuery()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.net.URL: java.lang.String getQuery()>";
"<java.net.URL: java.lang.String getProtocol()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: java.lang.String getAuthority()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: java.lang.String getPath()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.net.URL: java.lang.String getQuery()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.io.Writer: java.io.Writer append(char)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.io.Writer: void write(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.io.OutputStreamWriter: void write(int)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.io.Writer: void write(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.io.OutputStreamWriter: void close()>";
"<java.io.Writer: java.io.Writer append(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.Writer: void write(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStreamWriter: void write(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.OutputStreamWriter: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.URL url()>" -> "<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>" -> "<java.lang.String: int length()>";
"<java.lang.String: java.lang.String substring(int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.String: int length()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.parser.TokenQueue: java.lang.String remainder()>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.parser.TokenQueue: java.lang.String remainder()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<org.jsoup.parser.TokenQueue: java.lang.String remainder()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.parser.TokenQueue: java.lang.String remainder()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String remainder()>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.parser.TokenQueue: boolean isEmpty()>" -> "<org.jsoup.parser.TokenQueue: int remainingLength()>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<java.lang.String: java.lang.String trim()>";
"<java.lang.String: java.lang.String trim()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<java.lang.String: java.lang.String trim()>";
"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: java.util.Map cookies()>";
"<org.jsoup.helper.HttpConnection$Response: java.util.Map cookies()>" -> "<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: boolean hasCookie(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: boolean hasCookie(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base removeHeader(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base removeHeader(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base removeHeader(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: java.util.Map$Entry scanHeaders(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.util.Map$Entry scanHeaders(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<java.lang.String: java.lang.String toLowerCase()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>" -> "<java.io.ByteArrayOutputStream: byte[] toByteArray()>";
"<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>" -> "<java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
"<java.io.ByteArrayOutputStream: byte[] toByteArray()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.io.ByteArrayOutputStream: void write(byte[],int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>" -> "<java.io.FilterInputStream: int read(byte[])>";
"<java.io.FilterInputStream: int read(byte[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.io.BufferedInputStream: void close()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.io.BufferedInputStream: void close()>";
"<java.io.BufferedInputStream: void close()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.net.URL: java.lang.String getProtocol()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.net.URL: java.lang.String toString()>";
"<java.net.URL: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: boolean hasHeader(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: boolean hasHeader(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: java.util.Map$Entry scanHeaders(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
"<java.lang.String: boolean equals(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>" -> "<java.lang.String: java.lang.String toUpperCase()>";
"<java.lang.String: java.lang.String toUpperCase()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Collection data()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Collection data()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: boolean followRedirects()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base url(java.net.URL)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<org.jsoup.helper.HttpConnection$Request: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Request: java.net.URL url()>" -> "<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method()>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base url(java.net.URL)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.util.ArrayList: int size()>";
"<java.util.ArrayList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Collection data()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base url(java.net.URL)>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Collection data()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>" -> "<java.util.ArrayList: void clear()>";
"<java.util.ArrayList: java.util.Iterator iterator()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.ArrayList: void clear()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.net.URL url()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: int timeout()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: int timeout()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Map cookies()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Map headers()>";
"<org.jsoup.helper.HttpConnection$Request: java.util.Map cookies()>" -> "<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>";
"<org.jsoup.helper.HttpConnection$Request: java.util.Map headers()>" -> "<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<java.lang.Enum: java.lang.String name()>";
"<java.lang.Enum: java.lang.String name()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<java.net.URL: java.net.URLConnection openConnection()>";
"<java.net.URL: java.net.URLConnection openConnection()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<java.util.HashMap: int size()>";
"<org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>" -> "<java.util.LinkedHashMap: java.util.Set entrySet()>";
"<java.util.HashMap: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedHashMap: java.util.Set entrySet()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<java.util.LinkedHashMap: java.util.Set entrySet()>";
"<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>" -> "<java.util.LinkedHashMap: java.util.Set entrySet()>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>" -> "<org.jsoup.helper.HttpConnection$Request: java.util.Map cookies()>";
"<org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>" -> "<java.util.LinkedHashMap: java.util.Set entrySet()>";
"<org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<org.jsoup.helper.HttpConnection: org.jsoup.nodes.Document get()>" -> "<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<java.io.IOException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.helper.DataUtil: void <clinit>()>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.DataUtil: void <clinit>()>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>" -> "<org.jsoup.parser.Parser: void <clinit>()>";
"<org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void <clinit>()>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Parser: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Parser: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Parser: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Parser: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Parser: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>" -> "<org.jsoup.parser.Parser: void <clinit>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>" -> "<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainDataOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainInlineOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setPreserveWhitespace()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainInlineOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainInlineOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setCanContainBlock()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setCanContainBlock()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setCanContainBlock()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setOptionalClosing()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainDataOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setFormatAsInline()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainDataOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setEmpty()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainDataOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setContainDataOnly()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setLimitChildren()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<org.jsoup.parser.Tag: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<java.util.HashMap: void <init>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.Parser: void parseStartTag()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.Parser: void parseTextNode()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.Parser: void parseXmlDecl()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.Parser: void parseCdata()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.Parser: void parseComment()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.Parser: void parseEndTag()>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.nodes.Document: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<java.util.LinkedList: void <init>()>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag createInline(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag createBlock(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setParent(java.lang.String[])>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>" -> "<java.util.Collections: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>" -> "<java.util.ArrayList: void <init>(int)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>" -> "<java.util.Collections: java.util.List emptyList()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>" -> "<java.util.Collections: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>" -> "<java.util.ArrayList: void <init>(int)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>" -> "<java.util.Collections: java.util.List emptyList()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>" -> "<java.util.Collections: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>" -> "<java.util.ArrayList: void <init>(int)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>" -> "<java.util.Collections: java.util.List emptyList()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Tag: void <init>(java.lang.String)>" -> "<java.util.Collections: void <clinit>()>";
"<org.jsoup.parser.Tag: void <init>(java.lang.String)>" -> "<java.util.Collections: java.util.List emptyList()>";
"<org.jsoup.parser.Tag: void <init>(java.lang.String)>" -> "<java.util.Collections: java.util.List emptyList()>";
"<org.jsoup.parser.Tag: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.DataNode: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.TextNode: org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToClose(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Attributes: void <init>()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Parser: void <clinit>()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Parser: void parseTextNode()>" -> "<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseTextNode()>" -> "<org.jsoup.nodes.TextNode: org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseTextNode()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<org.jsoup.nodes.XmlDeclaration: void <init>(java.lang.String,java.lang.String,boolean)>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.parser.Parser: void parseCdata()>" -> "<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseCdata()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToClose(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.nodes.Document: void <init>(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.nodes.Document: void <init>(java.lang.String)>" -> "<org.jsoup.nodes.Document$OutputSettings: void <init>()>";
"<org.jsoup.nodes.Document: void <init>(java.lang.String)>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>";
"<org.jsoup.nodes.Document: void <init>(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>" -> "<org.jsoup.nodes.Document: void <init>(java.lang.String)>";
"<java.util.LinkedList: void <init>()>" -> "<java.util.AbstractSequentialList: void <init>()>";
"<java.util.LinkedList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setKnownTag()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<java.util.ArrayList: void <init>(int)>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.ArrayList: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.Collections: java.util.List emptyList()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.DataNode: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Node: void <init>(java.lang.String)>";
"<org.jsoup.nodes.TextNode: org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.TextNode: org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.TextNode: org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToClose(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Parser: void <clinit>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.parser.Parser: void <clinit>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToSuitableContainer(org.jsoup.parser.Tag)>";
"<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>" -> "<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>";
"<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.Attributes: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.nodes.Attributes: void <init>()>" -> "<java.util.LinkedHashMap: void <init>(int)>";
"<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Node: void <init>()>";
"<org.jsoup.nodes.XmlDeclaration: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.nodes.Node: void <init>(java.lang.String)>";
"<java.lang.Character: java.lang.Character valueOf(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Node: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Document$OutputSettings: void <init>()>" -> "<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>";
"<org.jsoup.nodes.Document$OutputSettings: void <init>()>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<org.jsoup.nodes.Document$OutputSettings: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>" -> "<org.jsoup.nodes.Attributes: void <init>()>";
"<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>";
"<java.util.AbstractSequentialList: void <init>()>" -> "<java.util.AbstractList: void <init>()>";
"<java.util.AbstractSequentialList: void <init>()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String)>" -> "<org.jsoup.nodes.Attributes: void <init>()>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String)>" -> "<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: void <clinit>()>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: void <init>(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: void <init>(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: void <init>(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: void <init>(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String)>" -> "<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Parser: void <clinit>()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToSuitableContainer(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToSuitableContainer(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>" -> "<java.util.ArrayList: void <init>(int)>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.Attribute: org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>";
"<java.util.LinkedHashMap: void <init>(int)>" -> "<java.util.HashMap: void <init>()>";
"<java.util.LinkedHashMap: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: void <init>()>" -> "<java.util.Collections: void <clinit>()>";
"<org.jsoup.nodes.Node: void <init>()>" -> "<java.util.Collections: java.util.List emptyList()>";
"<org.jsoup.nodes.Node: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities: java.util.Map access$200()>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities: java.util.Map access$100()>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>";
"<org.jsoup.nodes.Entities$EscapeMode: void <clinit>()>" -> "<org.jsoup.nodes.Entities: java.util.Map access$000()>";
"<java.util.HashMap: void <init>(int)>" -> "<java.util.AbstractMap: void <init>()>";
"<java.util.HashMap: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.Character: java.lang.String toString(char)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.StringBuffer: void <init>(int)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.Integer: void <clinit>()>";
"<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.nodes.Entities$EscapeMode: void <init>(java.lang.String,int,java.util.Map)>" -> "<java.lang.Enum: void <init>(java.lang.String,int)>";
"<org.jsoup.nodes.Entities: java.util.Map access$200()>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.util.Map access$100()>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<org.jsoup.nodes.Entities: java.util.Map access$000()>" -> "<org.jsoup.nodes.Entities: void <clinit>()>";
"<java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Character: java.lang.String toString(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.lang.StringBuffer: void <init>(int)>" -> "<java.lang.Object: void <init>()>";
"<java.lang.StringBuffer: void <init>(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: boolean isEmpty()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: boolean isKnownTag()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag setSelfClosing()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: boolean isData()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>" -> "<java.lang.Object: java.lang.Class getClass()>";
"<java.lang.Object: java.lang.Class getClass()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: boolean isData()>" -> "<org.jsoup.parser.Tag: boolean isEmpty()>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.util.HashMap: boolean containsKey(java.lang.Object)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<java.util.HashMap: boolean containsKey(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.HashMap: java.lang.Object get(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.StringBuffer: java.lang.String toString()>";
"<java.lang.StringBuffer: java.lang.String toString()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.String: boolean contains(java.lang.CharSequence)>";
"<org.jsoup.nodes.Entities: java.lang.String unescape(java.lang.String,boolean)>" -> "<java.lang.String: int length()>";
"<java.lang.String: boolean contains(java.lang.CharSequence)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.nodes.Entities: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: void addChildren(org.jsoup.nodes.Node[])>";
"<org.jsoup.nodes.Node: void addChildren(org.jsoup.nodes.Node[])>" -> "<org.jsoup.nodes.Node: void reparentChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Node: void addChildren(org.jsoup.nodes.Node[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.nodes.Node: void addChildren(org.jsoup.nodes.Node[])>" -> "<java.util.ArrayList: int size()>";
"<java.util.ArrayList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag getImplicitParent()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: boolean requiresSpecificParent()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag register(org.jsoup.parser.Tag)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>" -> "<org.jsoup.nodes.Node: java.lang.String baseUri()>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Node: void <init>(java.lang.String,org.jsoup.nodes.Attributes)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Element: java.lang.String tagName()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.net.URL: void <init>(java.net.URL,java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.net.URL: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.net.URL: java.lang.String toExternalForm()>";
"<java.net.URL: java.lang.String toExternalForm()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.net.URL: java.lang.String getPath()>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.net.URL: java.lang.String toExternalForm()>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<org.jsoup.nodes.Node: boolean hasAttr(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Node: boolean hasAttr(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Node: boolean hasAttr(java.lang.String)>" -> "<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>";
"<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.nodes.Attributes: boolean hasKey(java.lang.String)>" -> "<java.util.HashMap: boolean containsKey(java.lang.Object)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<java.lang.String: int length()>";
"<java.lang.String: boolean startsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int)>";
"<java.lang.String: java.lang.String substring(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<org.jsoup.nodes.Node: boolean hasAttr(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String attr(java.lang.String)>" -> "<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>";
"<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>" -> "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>";
"<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<org.jsoup.nodes.Element: java.lang.String tagName()>" -> "<org.jsoup.parser.Tag: java.lang.String getName()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>";
"<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>" -> "<org.jsoup.nodes.Attribute: java.lang.String getKey()>";
"<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.parser.Tag: void <init>(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setAncestor(java.lang.String[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setIgnoreEnd(java.lang.String[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag setExcludes(java.lang.String[])>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Document: java.lang.String nodeName()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<java.util.LinkedList: boolean add(java.lang.Object)>";
"<org.jsoup.parser.Parser: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<java.util.LinkedList: boolean add(java.lang.Object)>";
"<java.util.LinkedList: boolean add(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element last()>" -> "<java.util.LinkedList: java.lang.Object getLast()>";
"<java.util.LinkedList: java.lang.Object getLast()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToClose(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: int size()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToClose(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: java.lang.Object get(int)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToClose(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: java.lang.Object removeLast()>";
"<java.util.LinkedList: int size()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<java.util.LinkedList: java.lang.Object removeLast()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeTagName()>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>" -> "<java.lang.IllegalStateException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>" -> "<java.lang.IllegalStateException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: int remainingLength()>";
"<java.lang.IllegalStateException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>()>";
"<java.lang.IllegalStateException: void <init>(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTagName()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTagName()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWord()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTagName()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>";
"<org.jsoup.parser.TokenQueue: boolean matchesWord()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.parser.TokenQueue: boolean matchesWord()>" -> "<java.lang.Character: boolean isLetterOrDigit(char)>";
"<java.lang.Character: boolean isLetterOrDigit(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: boolean matchesWord()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<java.lang.String: boolean endsWith(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.Parser: void parseComment()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<java.lang.String: boolean endsWith(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseCdata()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseCdata()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseXmlDecl()>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Parser: void parseTextNode()>" -> "<org.jsoup.parser.TokenQueue: char peek()>";
"<org.jsoup.parser.Parser: void parseTextNode()>" -> "<org.jsoup.parser.TokenQueue: void advance()>";
"<org.jsoup.parser.Parser: void parseTextNode()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: void advance()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: char peek()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeAttributeKey()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<org.jsoup.parser.TokenQueue: void advance()>";
"<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>" -> "<java.lang.Character: boolean isWhitespace(char)>";
"<java.lang.Character: boolean isWhitespace(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeAttributeKey()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeAttributeKey()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWord()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeAttributeKey()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>";
"<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToSuitableContainer(org.jsoup.parser.Tag)>" -> "<java.util.AbstractCollection: boolean isEmpty()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element popStackToSuitableContainer(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: java.lang.Object removeLast()>";
"<java.util.AbstractCollection: boolean isEmpty()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: int size()>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: java.lang.Object getLast()>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: int size()>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<java.util.LinkedList: java.lang.Object get(int)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<java.util.LinkedList: void addLast(java.lang.Object)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Element addChildToParent(org.jsoup.nodes.Element,boolean)>" -> "<java.util.LinkedList: void addLast(java.lang.Object)>";
"<java.util.LinkedList: void addLast(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.nodes.Node: void setBaseUri(java.lang.String)>";
"<org.jsoup.nodes.Node: void setBaseUri(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeTagName()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompToIgnoreCase(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.parser.Parser: void parseStartTag()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompToIgnoreCase(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompToIgnoreCase(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: void <init>()>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: void <init>()>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<java.util.ArrayList: java.lang.Object get(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.helper.Validate: void isTrue(boolean)>";
"<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: void reindexChildren()>";
"<org.jsoup.helper.Validate: void isTrue(boolean)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: void reindexChildren()>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.nodes.Node: void reindexChildren()>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>" -> "<java.util.ArrayList: java.lang.Object remove(int)>";
"<java.util.ArrayList: java.lang.Object remove(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>" -> "<org.jsoup.parser.Tag: void <clinit>()>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>" -> "<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>" -> "<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>" -> "<org.jsoup.nodes.Node: java.lang.String baseUri()>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependElement(java.lang.String)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>";
"<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>" -> "<org.jsoup.helper.Validate: void noNullElements(java.lang.Object[])>";
"<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>" -> "<org.jsoup.nodes.Node: void reindexChildren()>";
"<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>" -> "<org.jsoup.nodes.Node: void reparentChild(org.jsoup.nodes.Node)>";
"<org.jsoup.helper.Validate: void noNullElements(java.lang.Object[])>" -> "<org.jsoup.helper.Validate: void noNullElements(java.lang.Object[],java.lang.String)>";
"<org.jsoup.helper.Validate: void noNullElements(java.lang.Object[],java.lang.String)>" -> "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: void addChildren(int,org.jsoup.nodes.Node[])>" -> "<java.util.ArrayList: void add(int,java.lang.Object)>";
"<java.util.ArrayList: void add(int,java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendElement(java.lang.String)>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Document normalise()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>";
"<org.jsoup.nodes.Document: org.jsoup.nodes.Element head()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: void normaliseTextNodes(org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>" -> "<org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>";
"<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>" -> "<org.jsoup.select.Evaluator$Tag: void <init>(java.lang.String)>";
"<org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Elements: void <init>()>";
"<org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>";
"<org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Collector$Accumulator: void <init>(org.jsoup.nodes.Element,org.jsoup.select.Elements,org.jsoup.select.Evaluator)>";
"<org.jsoup.select.Evaluator$Tag: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Elements: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.select.Elements: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<org.jsoup.select.NodeTraversor: void <init>(org.jsoup.select.NodeVisitor)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.select.Collector$Accumulator: void <init>(org.jsoup.nodes.Element,org.jsoup.select.Elements,org.jsoup.select.Evaluator)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.select.Evaluator: void <init>()>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.select.Collector$Accumulator: void head(org.jsoup.nodes.Node,int)>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.select.Collector$Accumulator: void tail(org.jsoup.nodes.Node,int)>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.select.Collector$Accumulator: void tail(org.jsoup.nodes.Node,int)>";
"<org.jsoup.select.Collector$Accumulator: void head(org.jsoup.nodes.Node,int)>" -> "<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>";
"<org.jsoup.select.Elements: boolean add(org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Elements: int size()>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Elements: int size()>";
"<org.jsoup.nodes.Document: void normaliseStructure(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>";
"<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.select.Elements: int size()>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>" -> "<java.util.ArrayList: boolean isEmpty()>";
"<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<java.util.ArrayList: boolean isEmpty()>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.nodes.Element: org.jsoup.select.Elements getElementsByTag(java.lang.String)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: java.util.List childNodes()>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: org.jsoup.nodes.Node childNode(int)>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>";
"<org.jsoup.nodes.Node: java.util.List childNodes()>" -> "<java.util.Collections: void <clinit>()>";
"<org.jsoup.nodes.Node: java.util.List childNodes()>" -> "<java.util.Collections: java.util.List unmodifiableList(java.util.List)>";
"<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>" -> "<java.lang.Integer: void <clinit>()>";
"<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>" -> "<java.lang.Integer: java.lang.Integer valueOf(int)>";
"<java.util.Collections: java.util.List unmodifiableList(java.util.List)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>" -> "<org.jsoup.nodes.Node: int siblingIndex()>";
"<org.jsoup.nodes.Node: org.jsoup.nodes.Node childNode(int)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.select.NodeTraversor: void traverse(org.jsoup.nodes.Node)>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.nodes.Node: void reparentChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: void setParentNode(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Node: void setParentNode(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: int siblingIndex()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesStartTag()>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesCS(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesCS(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesCS(java.lang.String)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesCS(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matchesStartTag()>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.parser.TokenQueue: boolean matchesStartTag()>" -> "<java.lang.Character: boolean isLetter(char)>";
"<org.jsoup.parser.TokenQueue: boolean matchesStartTag()>" -> "<org.jsoup.parser.TokenQueue: int remainingLength()>";
"<java.lang.Character: boolean isLetter(char)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.parser.Tag: void <clinit>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>" -> "<java.lang.Object: java.lang.Class getClass()>";
"<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: boolean isValidParent(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Parser: boolean stackHasValidParent(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: boolean isValidAncestor(org.jsoup.parser.Tag)>";
"<org.jsoup.parser.Tag: boolean isValidAncestor(org.jsoup.parser.Tag)>" -> "<java.util.ArrayList: boolean isEmpty()>";
"<org.jsoup.parser.Tag: boolean isValidAncestor(org.jsoup.parser.Tag)>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.parser.Tag: boolean isValidAncestor(org.jsoup.parser.Tag)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.parser.Tag: boolean isValidAncestor(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Tag: boolean isValidParent(org.jsoup.parser.Tag)>" -> "<org.jsoup.parser.Tag: boolean isValidAncestor(org.jsoup.parser.Tag)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Element: org.jsoup.select.Elements select(java.lang.String)>";
"<org.jsoup.nodes.Element: org.jsoup.select.Elements select(java.lang.String)>" -> "<org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element)>";
"<org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>";
"<org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.Selector: org.jsoup.select.Elements select()>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object)>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.select.Selector: org.jsoup.select.Elements select()>" -> "<org.jsoup.select.Collector: org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element)>";
"<org.jsoup.select.QueryParser: void <clinit>()>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>" -> "<org.jsoup.select.QueryParser: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void <init>(java.lang.String)>" -> "<java.lang.Object: void <init>()>";
"<org.jsoup.select.QueryParser: void <init>(java.lang.String)>" -> "<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void <init>(java.lang.String)>" -> "<java.util.ArrayList: void <init>()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>" -> "<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: void findElements()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: void combinator(char)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: void combinator(char)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: void findElements()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.CombiningEvaluator$Or: void <init>(java.util.Collection)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.QueryParser: void combinator(char)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.StructuralEvaluator$Root: void <init>()>";
"<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>" -> "<org.jsoup.select.CombiningEvaluator: void <init>(java.util.Collection)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void byId()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void not()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void matches(boolean)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void matches(boolean)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void contains(boolean)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void contains(boolean)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void has()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void indexEquals()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void indexGreaterThan()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void indexLessThan()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void allElements()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void byAttribute()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void byTag()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.select.QueryParser: void byClass()>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.StructuralEvaluator$PreviousSibling: void <init>(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: void <init>(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.StructuralEvaluator$Parent: void <init>(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.StructuralEvaluator$ImmediateParent: void <init>(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>";
"<org.jsoup.select.CombiningEvaluator$Or: void <init>(java.util.Collection)>" -> "<org.jsoup.select.CombiningEvaluator: void <init>()>";
"<org.jsoup.select.CombiningEvaluator$Or: void <init>(java.util.Collection)>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>";
"<org.jsoup.select.StructuralEvaluator$Root: void <init>()>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.CombiningEvaluator: void <init>(java.util.Collection)>" -> "<org.jsoup.select.CombiningEvaluator: void <init>()>";
"<org.jsoup.select.QueryParser: void byId()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byId()>" -> "<org.jsoup.select.Evaluator$Id: void <init>(java.lang.String)>";
"<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>" -> "<java.lang.IllegalStateException: void <init>(java.lang.String)>";
"<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>" -> "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
"<org.jsoup.select.QueryParser: void not()>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.QueryParser: void not()>" -> "<org.jsoup.select.StructuralEvaluator$Not: void <init>(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.QueryParser: void not()>" -> "<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>";
"<org.jsoup.select.QueryParser: void not()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<org.jsoup.select.Evaluator$Matches: void <init>(java.util.regex.Pattern)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<org.jsoup.select.Evaluator$MatchesOwn: void <init>(java.util.regex.Pattern)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<org.jsoup.select.Evaluator$ContainsText: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<org.jsoup.select.Evaluator$ContainsOwnText: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void has()>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.QueryParser: void has()>" -> "<org.jsoup.select.StructuralEvaluator$Has: void <init>(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.QueryParser: void has()>" -> "<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>";
"<org.jsoup.select.QueryParser: void has()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void indexEquals()>" -> "<org.jsoup.select.QueryParser: int consumeIndex()>";
"<org.jsoup.select.QueryParser: void indexEquals()>" -> "<org.jsoup.select.Evaluator$IndexEquals: void <init>(int)>";
"<org.jsoup.select.QueryParser: void indexGreaterThan()>" -> "<org.jsoup.select.QueryParser: int consumeIndex()>";
"<org.jsoup.select.QueryParser: void indexGreaterThan()>" -> "<org.jsoup.select.Evaluator$IndexGreaterThan: void <init>(int)>";
"<org.jsoup.select.QueryParser: void indexLessThan()>" -> "<org.jsoup.select.QueryParser: int consumeIndex()>";
"<org.jsoup.select.QueryParser: void indexLessThan()>" -> "<org.jsoup.select.Evaluator$IndexLessThan: void <init>(int)>";
"<org.jsoup.select.QueryParser: void allElements()>" -> "<org.jsoup.select.Evaluator$AllElements: void <init>()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.lang.String: void <clinit>()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Selector$SelectorParseException: void <init>(java.lang.String,java.lang.Object[])>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeWithValueMatching: void <init>(java.lang.String,java.util.regex.Pattern)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeWithValueContaining: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeWithValueEnding: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeWithValueStarting: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeWithValueNot: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeWithValue: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$Attribute: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.select.Evaluator$AttributeStarting: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<org.jsoup.select.Evaluator$Tag: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byClass()>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byClass()>" -> "<org.jsoup.select.Evaluator$Class: void <init>(java.lang.String)>";
"<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>" -> "<java.util.Arrays: java.util.List asList(java.lang.Object[])>";
"<org.jsoup.select.CombiningEvaluator$And: void <init>(org.jsoup.select.Evaluator[])>" -> "<org.jsoup.select.CombiningEvaluator$And: void <init>(java.util.Collection)>";
"<org.jsoup.select.StructuralEvaluator$PreviousSibling: void <init>(org.jsoup.select.Evaluator)>" -> "<org.jsoup.select.StructuralEvaluator: void <init>()>";
"<org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling: void <init>(org.jsoup.select.Evaluator)>" -> "<org.jsoup.select.StructuralEvaluator: void <init>()>";
"<org.jsoup.select.StructuralEvaluator$Parent: void <init>(org.jsoup.select.Evaluator)>" -> "<org.jsoup.select.StructuralEvaluator: void <init>()>";
"<org.jsoup.select.StructuralEvaluator$ImmediateParent: void <init>(org.jsoup.select.Evaluator)>" -> "<org.jsoup.select.StructuralEvaluator: void <init>()>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.select.QueryParser: void <clinit>()>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.select.CombiningEvaluator: void <init>()>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.CombiningEvaluator: void <init>()>" -> "<java.util.ArrayList: void <init>()>";
"<org.jsoup.select.Evaluator$Id: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.StructuralEvaluator$Not: void <init>(org.jsoup.select.Evaluator)>" -> "<org.jsoup.select.StructuralEvaluator: void <init>()>";
"<org.jsoup.select.Evaluator$Matches: void <init>(java.util.regex.Pattern)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$MatchesOwn: void <init>(java.util.regex.Pattern)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.select.Evaluator$ContainsText: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$ContainsOwnText: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.StructuralEvaluator$Has: void <init>(org.jsoup.select.Evaluator)>" -> "<org.jsoup.select.StructuralEvaluator: void <init>()>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<org.jsoup.helper.StringUtil: void <clinit>()>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<java.lang.Integer: int parseInt(java.lang.String)>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<java.lang.Integer: void <clinit>()>";
"<org.jsoup.select.Evaluator$IndexEquals: void <init>(int)>" -> "<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>";
"<org.jsoup.select.Evaluator$IndexGreaterThan: void <init>(int)>" -> "<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>";
"<org.jsoup.select.Evaluator$IndexLessThan: void <init>(int)>" -> "<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>";
"<org.jsoup.select.Evaluator$AllElements: void <init>()>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$AttributeWithValueMatching: void <init>(java.lang.String,java.util.regex.Pattern)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$AttributeWithValueContaining: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.Evaluator$AttributeWithValueEnding: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.Evaluator$AttributeWithValueStarting: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.Evaluator$AttributeWithValueNot: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.Evaluator$AttributeWithValue: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.select.Evaluator$Attribute: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$AttributeStarting: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$Class: void <init>(java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<java.util.Arrays: java.util.List asList(java.lang.Object[])>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.select.StructuralEvaluator: void <init>()>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.helper.StringUtil: void <clinit>()>" -> "<java.lang.String: void <clinit>()>";
"<java.lang.Integer: int parseInt(java.lang.String)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>" -> "<java.lang.Character: boolean isDigit(int)>";
"<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Evaluator: void <init>()>";
"<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.helper.Validate: void notEmpty(java.lang.String)>";
"<java.lang.Character: boolean isDigit(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.select.Evaluator$ContainsOwnText: void <init>(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.select.Evaluator$ContainsText: void <init>(java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.parser.TokenQueue: java.lang.String unescape(java.lang.String)>" -> "<java.lang.String: char[] toCharArray()>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeToAny(java.lang.String[])>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToAny(java.lang.String[])>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToAny(java.lang.String[])>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.select.CombiningEvaluator$Or: void add(org.jsoup.select.Evaluator)>";
"<org.jsoup.select.CombiningEvaluator$Or: void add(org.jsoup.select.Evaluator)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>";
"<org.jsoup.select.QueryParser: java.lang.String consumeSubQuery()>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.Character: void <clinit>()>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.Character: java.lang.Character valueOf(char)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.StringBuilder: void <init>()>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.StringBuilder: java.lang.String toString()>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: void clear()>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void combinator(char)>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.select.QueryParser: void byClass()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byClass()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWord()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeElementSelector()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeElementSelector()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeElementSelector()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWord()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeElementSelector()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: void allElements()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.select.QueryParser: int consumeIndex()>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.helper.StringUtil: boolean isNumeric(java.lang.String)>" -> "<java.lang.String: int codePointAt(int)>";
"<java.lang.String: int codePointAt(int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void indexLessThan()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void indexGreaterThan()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void indexEquals()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void has()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void has()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.select.QueryParser: void has()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.select.QueryParser: void contains(boolean)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.select.QueryParser: void matches(boolean)>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: void not()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void not()>" -> "<org.jsoup.parser.TokenQueue: void consume(java.lang.String)>";
"<org.jsoup.select.QueryParser: void not()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompBalanced(char,char)>";
"<org.jsoup.select.QueryParser: void byId()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: void byId()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesWord()>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>";
"<org.jsoup.select.QueryParser: void findElements()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String remainder()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<java.util.ArrayList: void clear()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.select.CombiningEvaluator$Or: void <init>(java.util.Collection)>" -> "<java.util.ArrayList: int size()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean consumeWhitespace()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchChomp(java.lang.String)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean isEmpty()>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: boolean matchesAny(java.lang.String[])>";
"<org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse()>" -> "<org.jsoup.parser.TokenQueue: char consume()>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>";
"<org.jsoup.select.Selector: void <init>(java.lang.String,org.jsoup.nodes.Element)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>";
"<org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)>";
"<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)>" -> "<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
"<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.lang.String)>" -> "<org.jsoup.nodes.Document$OutputSettings: org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset()>";
"<org.jsoup.helper.HttpConnection: org.jsoup.nodes.Document get()>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>" -> "<org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.nodes.Element: org.jsoup.select.Elements select(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.nodes.Element: org.jsoup.select.Elements select(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.nodes.Element: org.jsoup.select.Elements select(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.select.Elements: int size()>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.select.Elements: java.util.Iterator iterator()>";
"<org.jsoup.select.Elements: java.util.Iterator iterator()>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.select.Elements: int size()>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.select.Elements: java.util.Iterator iterator()>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.select.Elements: int size()>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<org.jsoup.select.Elements: java.util.Iterator iterator()>";
"<org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>" -> "<java.lang.String: int length()>";
"<org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>" -> "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
"<org.jsoup.examples.ListLinks: void main(java.lang.String[])>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>" -> "<java.lang.String: int length()>";
"<org.jsoup.examples.ListLinks: java.lang.String trim(java.lang.String,int)>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeElementSelector()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeCssIdentifier()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToAny(java.lang.String[])>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.select.QueryParser: void byClass()>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.select.QueryParser: void byClass()>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<java.lang.String: boolean contains(java.lang.CharSequence)>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byTag()>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<org.jsoup.select.QueryParser: void byAttribute()>" -> "<java.lang.String: java.lang.String substring(int)>";
"<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.select.Evaluator$AttributeKeyPair: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.select.Evaluator$AttributeWithValueMatching: void <init>(java.lang.String,java.util.regex.Pattern)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.select.Evaluator$AttributeWithValueMatching: void <init>(java.lang.String,java.util.regex.Pattern)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.select.CombiningEvaluator: void <init>(java.util.Collection)>" -> "<java.util.ArrayList: boolean addAll(java.util.Collection)>";
"<java.util.ArrayList: boolean addAll(java.util.Collection)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.select.CombiningEvaluator$Or: void <init>(java.util.Collection)>" -> "<java.util.ArrayList: boolean add(java.lang.Object)>";
"<org.jsoup.select.CombiningEvaluator$Or: void <init>(java.util.Collection)>" -> "<java.util.ArrayList: boolean addAll(java.util.Collection)>";
"<org.jsoup.parser.TokenQueue: boolean matchesCS(java.lang.String)>" -> "<java.lang.String: boolean startsWith(java.lang.String,int)>";
"<java.lang.String: boolean startsWith(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matchesStartTag()>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.parser.TokenQueue: boolean matchesStartTag()>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.select.Collector$Accumulator: void head(org.jsoup.nodes.Node,int)>" -> "<org.jsoup.select.Evaluator$Tag: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>";
"<org.jsoup.select.Evaluator$Tag: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>" -> "<org.jsoup.nodes.Element: java.lang.String tagName()>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<java.lang.String: int indexOf(java.lang.String,int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeToIgnoreCase(java.lang.String)>" -> "<java.lang.String: int length()>";
"<java.lang.String: int indexOf(java.lang.String,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: boolean matchesWhitespace()>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeAttributeKey()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.parser.TokenQueue: char peek()>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.parser.TokenQueue: boolean matchesAny(char[])>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.parser.TokenQueue: boolean matchesWord()>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTagName()>" -> "<java.lang.String: java.lang.String substring(int,int)>";
"<org.jsoup.select.Evaluator$Tag: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>" -> "<java.lang.String: boolean equals(java.lang.Object)>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag getImplicitParent()>" -> "<java.util.ArrayList: boolean isEmpty()>";
"<org.jsoup.parser.Tag: org.jsoup.parser.Tag getImplicitParent()>" -> "<java.util.ArrayList: java.lang.Object get(int)>";
"<org.jsoup.nodes.Node: void reparentChild(org.jsoup.nodes.Node)>" -> "<org.jsoup.nodes.Node: void removeChild(org.jsoup.nodes.Node)>";
"<org.jsoup.nodes.Node: void addChildren(org.jsoup.nodes.Node[])>" -> "<org.jsoup.nodes.Node: void setSiblingIndex(int)>";
"<org.jsoup.parser.Parser: org.jsoup.nodes.Attribute parseAttribute()>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.Parser: void parseEndTag()>" -> "<java.lang.String: int length()>";
"<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.String: java.lang.String trim()>";
"<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>" -> "<java.lang.String: java.lang.String toLowerCase()>";
"<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Attributes: void put(org.jsoup.nodes.Attribute)>";
"<org.jsoup.nodes.XmlDeclaration: void <init>(java.lang.String,java.lang.String,boolean)>" -> "<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>";
"<org.jsoup.nodes.DataNode: void <init>(java.lang.String,java.lang.String)>" -> "<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>" -> "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>";
"<org.jsoup.helper.HttpConnection$Base: java.lang.String getHeaderCaseInsensitive(java.lang.String)>" -> "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>";
"<org.jsoup.helper.HttpConnection$Base: java.util.Map$Entry scanHeaders(java.lang.String)>" -> "<java.util.LinkedHashMap: java.util.Set entrySet()>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base removeHeader(java.lang.String)>" -> "<java.util.HashMap: java.lang.Object remove(java.lang.Object)>";
"<java.util.HashMap: java.lang.Object remove(java.lang.Object)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>" -> "<java.util.HashMap: boolean containsKey(java.lang.Object)>";
"<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.parser.TokenQueue: boolean matches(java.lang.String)>" -> "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>";
"<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>" -> "<java.lang.RuntimeException: void <init>(java.lang.String)>";
"<org.jsoup.parser.TokenQueue: int remainingLength()>" -> "<java.lang.String: int length()>";
"<org.jsoup.parser.TokenQueue: char consume()>" -> "<java.lang.String: char charAt(int)>";
"<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>" -> "<java.lang.String: int indexOf(java.lang.String,int)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>" -> "<java.util.LinkedHashMap: java.util.Set entrySet()>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<org.jsoup.helper.HttpConnection$Response: org.jsoup.nodes.Document parse()>" -> "<java.lang.String: boolean startsWith(java.lang.String)>";
"<org.jsoup.helper.HttpConnection: org.jsoup.Connection url(java.lang.String)>" -> "<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Base url(java.net.URL)>";
"<org.jsoup.helper.HttpConnection$Request: void <init>()>" -> "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
"<org.jsoup.select.Collector$Accumulator: void head(org.jsoup.nodes.Node,int)>" -> "<org.jsoup.select.CombiningEvaluator$And: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>";
"<org.jsoup.select.CombiningEvaluator$And: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>" -> "<java.util.ArrayList: java.util.Iterator iterator()>";
}
